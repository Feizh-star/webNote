(self.webpackChunk=self.webpackChunk||[]).push([[4049],{4049:function(n){n.exports='<p>除了导出单个配置外，还有一些能满足更多需求的使用方式。</p> <h2 id="exporting-a-function">导出函数 <a href="#exporting-a-function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>你可能会遇到需要区分<a href="guides/development.htm"/*tpa=https://webpack.docschina.org/guides/development*/>开发</a>环境和<a href="guides/production.htm"/*tpa=https://webpack.docschina.org/guides/production*/>生产</a>环境的情况。你（至少）有两种选择：</p> <p>其中一种选择是由 webpack 配置导出一个函数而非对象，这个函数包含两个参数：</p> <ul> <li>参数一是环境（environment）。请查阅 <a href="api/cli/index.htm#environment-options"/*tpa=https://webpack.docschina.org/api/cli/#environment-options*/>environment 选项文档</a>了解更多。</li> <li>参数二是传递给 webpack 的配置项，其中包含 <a href="api/cli/index.htm#output-options"/*tpa=https://webpack.docschina.org/api/cli/#output-options*/><code>output-filename</code></a> 和 <a href="api/cli/index.htm#optimize-options"/*tpa=https://webpack.docschina.org/api/cli/#optimize-options*/><code>optimize-minimize</code></a> 等。</li> </ul> <pre><code class="hljs language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">module.exports = {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">module.exports = function(env, argv) {\n</span><span class="token prefix inserted">+</span><span class="token line">  return {\n</span><span class="token prefix inserted">+</span><span class="token line">    mode: env.production ? \'production\' : \'development\',\n</span><span class="token prefix inserted">+</span><span class="token line">    devtool: env.production ? \'source-map\' : \'eval\',\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    plugins: [\n</span><span class="token prefix unchanged"> </span><span class="token line">      new TerserPlugin({\n</span><span class="token prefix unchanged"> </span><span class="token line">        terserOptions: {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          compress: argv[\'optimize-minimize\'] // only if -p or --optimize-minimize were passed\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      })\n</span><span class="token prefix unchanged"> </span><span class="token line">    ]\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  };\n</span></span>};</code></pre> <h2 id="exporting-a-promise">导出 Promise <a href="#exporting-a-promise" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>当需要异步加载配置变量时，webpack 将执行函数并导出一个配置文件，同时返回一个 Promise。</p> <blockquote class="tip"> <p>支持使用 <code>Promise.all([/* Your promises */])</code> 导出多个 Promise。</p> </blockquote> <pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        entry<span class="token operator">:</span> <span class="token string">\'app.js\'/*tpa=https://webpack.docschina.org/app.js*/</span><span class="token punctuation">,</span>\n        <span class="token comment">/* ... */</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <blockquote class="warning"> <p>只有通过 webpack 命令行工具返回的 <code>Promise</code> 才生效。<a href="api/node/index.htm#webpack"/*tpa=https://webpack.docschina.org/api/node/#webpack*/><code>webpack()</code></a> 只接受对象。</p> </blockquote> <h2 id="exporting-multiple-configurations">导出多种配置 <a href="#exporting-multiple-configurations" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>除了导出单个配置对象/函数，你可能也会需要导出多种配置（webpack 3.1.0 起支持）。当运行 webpack 时，所有配置项都会构建。比如，对于多 <a href="configuration/output/index.htm#outputlibrarytarget"/*tpa=https://webpack.docschina.org/configuration/output/#outputlibrarytarget*/>targets</a>（如 AMD 和 CommonJS）<a href="guides/author-libraries.htm"/*tpa=https://webpack.docschina.org/guides/author-libraries*/>构建 library</a> 时会非常有用。</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">\'dist-amd.js\'/*tpa=https://webpack.docschina.org/dist-amd.js*/</span><span class="token punctuation">,</span>\n    libraryTarget<span class="token operator">:</span> <span class="token string">\'amd\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'amd\'</span><span class="token punctuation">,</span>\n  entry<span class="token operator">:</span> <span class="token string">\'app.js\'/*tpa=https://webpack.docschina.org/app.js*/</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">\'production\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">\'dist-commonjs.js\'/*tpa=https://webpack.docschina.org/dist-commonjs.js*/</span><span class="token punctuation">,</span>\n    libraryTarget<span class="token operator">:</span> <span class="token string">\'commonjs\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n  entry<span class="token operator">:</span> <span class="token string">\'app.js\'/*tpa=https://webpack.docschina.org/app.js*/</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">\'production\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre> <blockquote class="tip"> <p>如果你只传了一个 <a href="api/cli/index.htm#configuration-options"/*tpa=https://webpack.docschina.org/api/cli/#configuration-options*/><code>--config-name</code></a> 名字标识，webpack 将只会构建指定的配置项。</p> </blockquote> '}}]);