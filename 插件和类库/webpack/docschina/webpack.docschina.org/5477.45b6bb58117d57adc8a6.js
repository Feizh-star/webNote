(self.webpackChunk=self.webpackChunk||[]).push([[5477],{5477:function(n){n.exports='<p><a href="https://npmjs.com/package/mini-css-extract-plugin"><img src="https://img.shields.io/npm/v/mini-css-extract-plugin.svg" alt="npm"></a> <a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/mini-css-extract-plugin.svg" alt="node"></a> <a href="https://david-dm.org/webpack-contrib/mini-css-extract-plugin"><img src="https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg" alt="deps"></a> <a href="https://github.com/webpack-contrib/mini-css-extract-plugin/actions"><img src="https://github.com/webpack-contrib/mini-css-extract-plugin/workflows/mini-css-extract-plugin/badge.svg" alt="tests"></a> <a href="https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin"><img src="https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin/branch/master/graph/badge.svg" alt="coverage"></a> <a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a> <a href="https://packagephobia.now.sh/result?p=mini-css-extract-plugin"><img src="https://packagephobia.now.sh/badge?p=mini-css-extract-plugin" alt="size"></a></p> <p>本插件会将 CSS 提取到单独的文件中，为每个包含 CSS 的 JS 文件创建一个 CSS 文件，并且支持 CSS 和 SourceMaps 的按需加载。</p> <p>本插件基于 webpack v4 的新特性（模块类型）构建，并且需要 webpack 4 才能正常工作。</p> <p>与 extract-text-webpack-plugin 相比：</p> <ul> <li>异步加载</li> <li>没有重复的编译（性能）</li> <li>更容易使用</li> <li>特别针对 CSS 开发</li> </ul> <h2 id="getting-started">快速开始 <a href="#getting-started" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>首先，你需要安装 <code>mini-css-extract-plugin</code>：</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev mini-css-extract-plugin</code></pre> <p>建议 <code>mini-css-extract-plugin</code> 与 <a href="loaders/css-loader/index.htm"/*tpa=https://webpack.docschina.org/loaders/css-loader/*/><code>css-loader</code></a> 一起使用。</p> <p>之后将 loader 与 plugin 添加到你的 <code>webpack</code> 配置文件中。 例如：</p> <p><strong>style.css</strong></p> <pre><code class="hljs language-css"><span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre> <p><strong>component.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token string">\'style.css\'/*tpa=https://webpack.docschina.org/style.css*/</span><span class="token punctuation">;</span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="options">选项 <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="plugin-options">Plugin Options <a href="#plugin-options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <table> <thead> <tr> <th align="center">选项名</th> <th align="center">类型</th> <th align="center">默认值</th> <th align="left">描述</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="选项名"><span><strong><a href="#filename"><code>filename</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>[name].css</code></span></td> <td align="left" data-th="描述"><span>此选项决定了输出的每个 CSS 文件的名称</span></td> </tr> <tr> <td align="center" data-th="选项名"><span><strong><a href="#chunkfilename"><code>chunkFilename</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>based on filename</code></span></td> <td align="left" data-th="描述"><span>此选项决定了非入口的 chunk 文件名称</span></td> </tr> <tr> <td align="center" data-th="选项名"><span><strong><a href="#ignoreorder"><code>ignoreOrder</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>false</code></span></td> <td align="left" data-th="描述"><span>移除 Order 警告</span></td> </tr> <tr> <td align="center" data-th="选项名"><span><strong><a href="#insert"><code>insert</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>var head = document.getElementsByTagName("head")[0];head.appendChild(linkTag);</code></span></td> <td align="left" data-th="描述"><span>在指定位置插入 <code>&#x3C;link></code></span></td> </tr> <tr> <td align="center" data-th="选项名"><span><strong><a href="#attributes"><code>attributes</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Object}</code></span></td> <td align="center" data-th="默认值"><span><code>{}</code></span></td> <td align="left" data-th="描述"><span>给标签添加自定义属性</span></td> </tr> <tr> <td align="center" data-th="选项名"><span><strong><a href="#linktype"><code>linkType</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>text/css</code></span></td> <td align="left" data-th="描述"><span>允许使用自定义 link 类型加载异步 chunk</span></td> </tr> </tbody> </table> <h4 id="filename"><code>filename</code> <a href="#filename" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String|Function</code> 默认值：<code>[name].css</code></p> <p>此选项决定了输出的每个 CSS 文件的名称。</p> <p>机制类似于 <a href="configuration/output/index.htm#outputfilename"/*tpa=https://webpack.docschina.org/configuration/output/#outputfilename*/><code>output.filename</code></a>。</p> <h4 id="chunkfilename"><code>chunkFilename</code> <a href="#chunkfilename" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String|Function</code> 默认值：<code>based on filename</code></p> <blockquote> <p>将 <code>chunkFilename</code> 设置为 <code>function</code>，仅在 webpack@5 下可用。</p> </blockquote> <p>此选项决定了非入口的 chunk 文件名称</p> <p>机制类似于 <a href="configuration/output/index.htm#outputchunkfilename"/*tpa=https://webpack.docschina.org/configuration/output/#outputchunkfilename*/><code>output.chunkFilename</code></a></p> <h4 id="ignoreorder"><code>ignoreOrder</code> <a href="#ignoreorder" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Boolean</code> 默认值：<code>false</code></p> <p>移除 Order 警告 具体细节请参阅<a href="#remove-order-warnings">示例</a>。</p> <h4 id="insert"><code>insert</code> <a href="#insert" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String|Function</code> 默认值：<code>document.head.appendChild(linkTag);</code></p> <p>默认情况下，<code>extract-css-chunks-plugin</code> 会将 styles（<code>&#x3C;link></code> 元素）附加到当前 <code>window</code> 的 <code>document.head</code> 中。</p> <p>但在某些情况下，可能需要对附加的目标进行精细化管理，甚至延迟 <code>link</code> 元素的插入。 例如，当你在 iframe 中运行应用程序异步加载样式时，就属于此情况。 对于此类情况，<code>insert</code> 可被配置为函数或自定义的选择器。</p> <p>如果附加目标为 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement">iframe</a>，请确保父文档有足够的访问权限进入 frame document，并将元素附加到它上面。</p> <h5 id="string"><code>String</code> <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>允许设置自定义的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector">query selector</a>。 新的 <code>&#x3C;link></code> 元素将被插入到找到的 item 之后。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  insert<span class="token operator">:</span> <span class="token string">\'#some-element\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>找到 id 为 <code>some-element</code> 的元素，在它之后插入新的 <code>&#x3C;link></code> 元素。</p> <h5 id="function"><code>Function</code> <a href="#function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>允许覆盖默认行为，并在任意位置插入样式。</p> <blockquote> <p>⚠ 注意，这段代码将与你的应用程序一起在浏览器中运行。由于并非所有浏览器都支持 ESMA 特性，如 <code>let</code>，<code>const</code>，<code>arrow function expression</code> 等，我们建议只使用 ECMA 5 的特性和语法。</p> </blockquote> <blockquote> <blockquote> <p>⚠ <code>insert</code> 函数被序列化为字符串并传递给插件。这意味着它将无法访问 webpack 配置模块的作用域。</p> </blockquote> </blockquote> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">insert</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">linkTag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> reference <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'#some-element\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>reference<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      reference<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>linkTag<span class="token punctuation">,</span> reference<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>找到 id 为 <code>some-element</code> 的元素，在它之后插入新的 <code>&#x3C;link></code> 元素。</p> <h4 id="attributes"><code>attributes</code> <a href="#attributes" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Object</code> 默认值：<code>{}</code></p> <p>如果定义了此选项，<code>mini-css-extract-plugin</code> 将把指定的属性和值附加到 <code>&#x3C;link></code> 元素上。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n        id<span class="token operator">:</span> <span class="token string">\'target\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'data-target\'</span><span class="token operator">:</span> <span class="token string">\'example\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>注意：它只适用于动态加载的 css chunk，如果你想修改 html 文件内的链接属性，请使用 <a href="https://github.com/jantimon/html-webpack-plugin">html-webpack-plugin</a>。</p> <h4 id="linktype"><code>linkType</code> <a href="#linktype" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String|Boolean</code> 默认值：<code>text/css</code></p> <p>此选项运行使用自定义链接类型加载异步 chunk，例如 <code>&#x3C;link type="text/css" ...></code>。</p> <h5 id="string"><code>String</code> <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>可选值：<code>text/css</code></p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      linkType<span class="token operator">:</span> <span class="token string">\'text/css\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="boolean"><code>Boolean</code> <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p><code>false</code> 禁用 link 的 <code>type</code> 属性</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      linkType<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="loader-options">Loader 选项 <a href="#loader-options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <table> <thead> <tr> <th align="center">名称</th> <th align="center">类型</th> <th align="center">默认值</th> <th align="left">描述</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="名称"><span><strong><a href="#publicpath"><code>publicPath</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>webpackOptions.output.publicPath</code></span></td> <td align="left" data-th="描述"><span>为图片、文件等外部资源指定一个自定义的公共路径。</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#esmodule"><code>esModule</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>true</code></span></td> <td align="left" data-th="描述"><span>使用 ES modules 语法</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#modules"><code>modules</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Object}</code></span></td> <td align="center" data-th="默认值"><span><code>undefined</code></span></td> <td align="left" data-th="描述"><span>配置 CSS 模块</span></td> </tr> </tbody> </table> <h4 id="publicpath"><code>publicPath</code> <a href="#publicpath" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String|Function</code> 默认值：<code>webpackOptions.output</code> 选项中的 <code>publicPath</code></p> <p>为 CSS 内的图片、文件等外部资源指定一个自定义的公共路径。 机制类似于 <a href="configuration/output/index.htm#outputpublicpath"/*tpa=https://webpack.docschina.org/configuration/output/#outputpublicpath*/><code>output.publicPath</code></a>。</p> <h5 id="string"><code>String</code> <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 类似于 webpackOptions.output 中的选项</span>\n      <span class="token comment">// 所有选项都是可选的</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              publicPath<span class="token operator">:</span> <span class="token string">\'/public/path/to/\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="function"><code>Function</code> <a href="#function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 类似于 webpackOptions.output 中的选项</span>\n      <span class="token comment">// 所有选项都是可选的</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">publicPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resourcePath<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'/\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="esmodule"><code>esModule</code> <a href="#esmodule" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean</code> 默认值：<code>true</code></p> <p>默认情况下 <code>mini-css-extract-plugin</code> 将会生成使用 ES 模块语法的 JS 模块。 在某些情况下，使用 ES 模块是有益的，比如：<a href="plugins/module-concatenation-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/module-concatenation-plugin/*/>module concatenation</a> 和 <a href="guides/tree-shaking/index.htm"/*tpa=https://webpack.docschina.org/guides/tree-shaking/*/>tree shaking</a>。</p> <p>你可以使用以下方式启用 CommonJS 语法：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              esModule<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="modules"><code>modules</code> <a href="#modules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Object</code> 默认值：<code>undefined</code></p> <p>用于配置 CSS Modules。</p> <h5 id="namedexport"><code>namedExport</code> <a href="#namedexport" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>类型：<code>Boolean</code> 类型：<code>false</code></p> <p>启用/禁用 ES 模块命名导出。</p> <blockquote> <p>⚠ 命名会被修改为 <code>camelCase</code> 的形式。</p> </blockquote> <blockquote> <p>⚠ 不允许在 css 的 class name 中使用 JavaScript 关键字。</p> </blockquote> <blockquote> <p>⚠ 应启用 <code>css-loader</code> 和 <code>MiniCssExtractPlugin.loader</code> 中的 <code>esModule</code> 以及 <code>modules.namedExport</code> 选项。</p> </blockquote> <p><strong>styles.css</strong></p> <pre><code class="hljs language-css"><span class="token selector">.foo-baz</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.bar</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre> <p><strong>index.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> fooBaz<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'styles.css\'/*tpa=https://webpack.docschina.org/styles.css*/</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooBaz<span class="token punctuation">,</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>你可以按照如下配置启用 ES 模块命名导出。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              esModule<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n                namedExport<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              esModule<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n                namedExport<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                localIdentName<span class="token operator">:</span> <span class="token string">\'foo__[name]__[local]\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="examples">示例 <a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="minimal-example">最简单的例子 <a href="#minimal-example" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 类似于 webpackOptions.output 中的选项</span>\n      <span class="token comment">// 所有选项都是可选的</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span><span class="token punctuation">,</span>\n      ignoreOrder<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 忽略有关顺序冲突的警告</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// 你可以在这里指定特定的 publicPath</span>\n              <span class="token comment">// 默认情况下使用 webpackOptions.output 中的 publicPath</span>\n              publicPath<span class="token operator">:</span> <span class="token string">\'../\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="common-use-case">通用用例 <a href="#common-use-case" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>mini-css-extract-plugin</code> is more often used in <code>production</code> mode to get separate css files. For <code>development</code> mode (including <code>webpack-dev-server</code>) you can use <code>style-loader</code>, because it injects CSS into the DOM using multiple </p><style></style> and works faster.<p></p> <blockquote> <p>i Do not use together <code>style-loader</code> and <code>mini-css-extract-plugin</code>.</p> </blockquote> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> devMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>devMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// enable in production only</span>\n  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(sa|sc|c)ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          devMode <span class="token operator">?</span> <span class="token string">\'style-loader\'</span> <span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="the-publicpath-option-as-function"><code>publicPath</code> 选项为函数 <a href="#the-publicpath-option-as-function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 类似于 webpackOptions.output 中的选项</span>\n      <span class="token comment">// 所有选项都是可选的</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">publicPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resourcePath<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// publicPath 是资源相对于上下文的相对路径</span>\n                <span class="token comment">// 例如：对于 ./css/admin/main.css publicPath 将会是 ../../</span>\n                <span class="token comment">// 而对于 ./css/main.css publicPath 将会是 ../</span>\n                <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'/\'</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="advanced-configuration-example">高级配置示例 <a href="#advanced-configuration-example" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>此插件不能与 loader 链中的 <code>style-loader</code> 一同使用。</p> <p>这是一个在 <code>development</code> 构建中使用 HMR 并且在 <code>production</code> 构建中将样式文件提取到独立文件中的示例。</p> <p>（为了更加清楚的表达，省略了 Loader 的选项，以适应需要。）</p> <p>如果你使用的是 <code>webpack-dev-server</code>，那么就无需使用 <code>HotModuleReplacementPlugin</code> plugin。 <code>webpack-dev-server</code> 使用 <code>hot</code> 选项决定是否启用/禁用 HMR。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> devMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n    <span class="token comment">// both options are optional</span>\n    filename<span class="token operator">:</span> devMode <span class="token operator">?</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span> <span class="token operator">:</span> <span class="token string">\'[name].[contenthash].css\'/*tpa=https://webpack.docschina.org/[name].[contenthash].css*/</span><span class="token punctuation">,</span>\n    chunkFilename<span class="token operator">:</span> devMode <span class="token operator">?</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span> <span class="token operator">:</span> <span class="token string">\'[id].[contenthash].css\'/*tpa=https://webpack.docschina.org/[id].[contenthash].css*/</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>devMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// only enable hot in development</span>\n  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(sa|sc|c)ss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="hot-module-reloading-hmr">模块热更新 (HMR) <a href="#hot-module-reloading-hmr" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>注意：在 webpack 5 中 HMR 已自动支持。无需配置。你可以跳过以下内容：</p> <p><code>mini-css-extract-plugin</code> 支持在开发中热重载实际的 CSS 文件。 我们提供了一些选项来启动标准 stylesheets 和本地范围内 CSS 和 CSS modules 的 HMR 支持。 以下是 mini-css 用于启动 HMR CSS modules 的示例配置。</p> <p>如果你使用的是 <code>webpack-dev-server</code>，那么你无需使用 <code>HotModuleReplacementPlugin</code> 插件。 <code>webpack-dev-server</code> 使用 <code>hot</code> 选项来控制启用/禁用 HMR。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n    <span class="token comment">// both options are optional</span>\n    filename<span class="token operator">:</span> devMode <span class="token operator">?</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span> <span class="token operator">:</span> <span class="token string">\'[name].[contenthash].css\'/*tpa=https://webpack.docschina.org/[name].[contenthash].css*/</span><span class="token punctuation">,</span>\n    chunkFilename<span class="token operator">:</span> devMode <span class="token operator">?</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span> <span class="token operator">:</span> <span class="token string">\'[id].[contenthash].css\'/*tpa=https://webpack.docschina.org/[id].[contenthash].css*/</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>devMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// only enable hot in development</span>\n  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="minimizing-for-production">生产模式压缩 <a href="#minimizing-for-production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>为了压缩输出文件，请使用类似于 <a href="plugins/css-minimizer-webpack-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/*/>css-minimizer-webpack-plugin</a> 这样的插件。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'css-minimizer-webpack-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].css\'/*tpa=https://webpack.docschina.org/[id].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// For webpack@5 you can use the `...` syntax to extend existing minimizers (i.e. `terser-webpack-plugin`), uncomment the next line</span>\n      <span class="token comment">// `...`,</span>\n      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>这将只在生产模式下启用 CSS 压缩优化。如果你需要在开发模式下使用，请设置 <code>optimization.minimize</code> 选项为 true。</p> <h3 id="using-preloaded-or-inlined-css">使用预加载或内联 CSS <a href="#using-preloaded-or-inlined-css" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>运行时代码通过 <code>&#x3C;link></code> 或者<code>&#x3C;style></code> 标签检测已经添加的 CSS。 当在服务端注入 CSS 代码 以及做 SSR 时将会很有用。 <code>&#x3C;link></code> 标签的 <code>href</code> 属性必须与将要被加载的 CSS chunk 的 URL 相匹配。 <code>data-href</code> 属性也可以被用在 <code>&#x3C;link></code> 和 <code>&#x3C;style></code> 标签中 使用内联 CSS 时，必须使用 <code>data-href</code> 属性。</p> <h3 id="extracting-all-css-in-a-single-file">提取所有的 CSS 到一个文件中 <a href="#extracting-all-css-in-a-single-file" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>用过使用 <code>optimization.splitChunks.cacheGroups</code> 选项，所有的 CSS 可以被提取到一个 CSS 文件中。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      cacheGroups<span class="token operator">:</span> <span class="token punctuation">{</span>\n        styles<span class="token operator">:</span> <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'styles\'</span><span class="token punctuation">,</span>\n          test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n          chunks<span class="token operator">:</span> <span class="token string">\'all\'</span><span class="token punctuation">,</span>\n          enforce<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="extracting-css-based-on-entry">基于入口提取 CSS <a href="#extracting-css-based-on-entry" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你可以基于 webpack 的入口名称提取 CSS。 当你使用路由动态加载但是想要通过入口加载对应的 CSS 文件时这将会非常有用。 这样也避免了 ExtractTextPlugin 造成的 CSS 重复复制问题。</p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> issuer <span class="token operator">=</span> c<span class="token punctuation">.</span>moduleGraph<span class="token punctuation">.</span><span class="token function">getIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// For webpack@4 chunks = m.issuer</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>issuer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>issuer<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> chunks <span class="token operator">=</span> c<span class="token punctuation">.</span>chunkGraph<span class="token punctuation">.</span><span class="token function">getModuleChunks</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// For webpack@4 chunks = m._chunks</span>\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> chunk<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    foo<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'src/foo\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    bar<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'src/bar\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span>\n      cacheGroups<span class="token operator">:</span> <span class="token punctuation">{</span>\n        fooStyles<span class="token operator">:</span> <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'styles_foo\'</span><span class="token punctuation">,</span>\n          test<span class="token operator">:</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">,</span> entry <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            m<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'CssModule\'</span> <span class="token operator">&#x26;&#x26;</span>\n            <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">===</span> entry<span class="token punctuation">,</span>\n          chunks<span class="token operator">:</span> <span class="token string">\'all\'</span><span class="token punctuation">,</span>\n          enforce<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        barStyles<span class="token operator">:</span> <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'styles_bar\'</span><span class="token punctuation">,</span>\n          test<span class="token operator">:</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">,</span> entry <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            m<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'CssModule\'</span> <span class="token operator">&#x26;&#x26;</span>\n            <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">===</span> entry<span class="token punctuation">,</span>\n          chunks<span class="token operator">:</span> <span class="token string">\'all\'</span><span class="token punctuation">,</span>\n          enforce<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="filename-option-as-function">文件名选项设置为函数 <a href="#filename-option-as-function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>使用 <code>filename</code> 选项，你可以使用 chunk 数据来定制文件名。 这点在处理多个入口，并且希望对给定的 入口/chunk 文件进行更多处理时，非常有用。 下面示例中，我们使用 <code>filename</code> 将生成的 css 输出到不同的目录中。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> chunk <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>chunk<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\'/js/\'</span><span class="token punctuation">,</span> <span class="token string">\'/css/\'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.css</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="long-term-caching">长期缓存 <a href="#long-term-caching" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>使用 <code>filename: "[contenthash].css"/*tpa=https://webpack.docschina.org/[contenthash].css*/</code> 启动长期缓存。根据需要添加 <code>[name]</code>。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].[contenthash].css\'/*tpa=https://webpack.docschina.org/[name].[contenthash].css*/</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token operator">:</span> <span class="token string">\'[id].[contenthash].css\'/*tpa=https://webpack.docschina.org/[id].[contenthash].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="remove-order-warnings">移除 Order 警告 <a href="#remove-order-warnings" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>对于通过使用 scoping 或命名约定来解决 css order 的项目，可以通过将插件的 ignoreOrder 选项设置为 true 来禁用 css order 警告。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      ignoreOrder<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="media-query-plugin">媒体查询插件 <a href="#media-query-plugin" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>如果您想从 CSS 文件中提取媒体查询（因为移动用户不需要加载电脑或平板专用的 CSS ），应使用以下插件之一：</p> <ul> <li><a href="https://github.com/SassNinja/media-query-plugin">Media Query Plugin</a></li> <li><a href="https://github.com/mike-diamond/media-query-splitting-plugin">Media Query Splitting Plugin</a></li> </ul> <h2 id="contributing">贡献 <a href="#contributing" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你还没有阅读过我们的贡献指南，请花一点时间阅读它。</p> <p><a href="https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p> <h2 id="license">License <a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/LICENSE">MIT</a></p> '}}]);