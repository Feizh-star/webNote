(self.webpackChunk=self.webpackChunk||[]).push([[8502],{8502:function(n){n.exports='<p><a href="https://npmjs.com/package/terser-webpack-plugin"><img src="https://img.shields.io/npm/v/terser-webpack-plugin.svg" alt="npm"></a> <a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/terser-webpack-plugin.svg" alt="node"></a> <a href="https://david-dm.org/webpack-contrib/terser-webpack-plugin"><img src="https://david-dm.org/webpack-contrib/terser-webpack-plugin.svg" alt="deps"></a> <a href="https://github.com/webpack-contrib/terser-webpack-plugin/actions"><img src="https://github.com/webpack-contrib/terser-webpack-plugin/workflows/terser-webpack-plugin/badge.svg" alt="tests"></a> <a href="https://codecov.io/gh/webpack-contrib/terser-webpack-plugin"><img src="https://codecov.io/gh/webpack-contrib/terser-webpack-plugin/branch/master/graph/badge.svg" alt="cover"></a> <a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a> <a href="https://packagephobia.now.sh/result?p=terser-webpack-plugin"><img src="https://packagephobia.now.sh/badge?p=terser-webpack-plugin" alt="size"></a></p> <p>该插件使用 <a href="https://github.com/terser-js/terser">terser</a> 来压缩 JavaScript。</p> <h2 id="getting-started">入门 <a href="#getting-started" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你使用的是 webpack v5 或以上版本，你不需要安装这个插件。webpack v5 自带最新的 <code>terser-webpack-plugin</code>。</p> <p>首先，你需要安装 <code>terser-webpack-plugin</code>：</p> <pre><code class="hljs language-console">$ npm install terser-webpack-plugin --save-dev\n</code></pre> <p>然后将插件添加到你的 <code>webpack</code> 配置文件中。例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"terser-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>接下来，按照你习惯的方式运行 <code>webpack</code>。</p> <h2 id="note-about-source-maps">关于 source maps 说明 <a href="#note-about-source-maps" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><strong>Works only with <code>source-map</code>, <code>inline-source-map</code>, <code>hidden-source-map</code> and <code>nosources-source-map</code> values for the <a href="configuration/devtool/index.htm"/*tpa=https://webpack.docschina.org/configuration/devtool/*/><code>devtool</code></a> option.</strong></p> <p>Why?</p> <ul> <li><code>eval</code> wraps modules in <code>eval("string")</code> and the minimizer does not handle strings.</li> <li><code>cheap</code> has not column information and minimizer generate only a single line, which leave only a single mapping.</li> </ul> <p>Using supported <code>devtool</code> values enable source map generation.</p> <h2 id="options">选项 <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="test"><code>test</code> <a href="#test" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>String|RegExp|Array&#x3C;String|RegExp></code> 默认值：<code>/\\.m?js(\\?.*)?$/i</code></p> <p>用来匹配需要压缩的文件。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js(\\?.*)?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="include"><code>include</code> <a href="#include" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>String|RegExp|Array&#x3C;String|RegExp></code> 默认值： <code>undefined</code></p> <p>匹配参与压缩的文件。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        include<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/includes</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="exclude"><code>exclude</code> <a href="#exclude" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>String|RegExp|Array&#x3C;String|RegExp></code> 默认值： <code>undefined</code></p> <p>匹配不需要压缩的文件。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/excludes</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="parallel"><code>parallel</code> <a href="#parallel" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>Boolean|Number</code> 默认值： <code>true</code></p> <p>使用多进程并发运行以提高构建速度。 并发运行的默认数量： <code>os.cpus().length - 1</code> 。</p> <blockquote> <p>并发运行可以显著提高构建速度，因此<strong>强烈建议添加此配置</strong> 。</p> </blockquote> <blockquote> <p>如果你使用 <strong>Circle CI</strong> 或任何其他不提供 CPU 实际可用数量的环境，则需要显式设置 CPU 数量，以避免 <code>Error: Call retries were exceeded</code>（请参阅 <a href="https://github.com/webpack-contrib/terser-webpack-plugin/issues/143">#143</a>，<a href="https://github.com/webpack-contrib/terser-webpack-plugin/issues/202">#202</a> ）。</p> </blockquote> <h4 id="boolean"><code>Boolean</code> <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>启用/禁用多进程并发运行功能。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="number"><code>Number</code> <a href="#number" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>启用多进程并发运行并设置并发运行次数。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="minify"><code>minify</code> <a href="#minify" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>Function</code> 默认值： <code>undefined</code></p> <p>允许你自定义压缩函数。 默认情况下，插件使用 <a href="https://github.com/terser-js/terser">terser</a> 库。 对于使用和测试未发布的版本或 fork 的代码很帮助。</p> <blockquote> <p>⚠️ <strong>启用 <code>parallel</code> 选项时，在 <code>minify</code> 函数内部只能使用 <code>require</code></strong> 。</p> </blockquote> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          myCustomOption<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// Can be async</span>\n        <span class="token function-variable function">minify</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">,</span> minimizerOptions</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// The `minimizerOptions` option contains option from the `terserOptions` option</span>\n          <span class="token comment">// You can use `minimizerOptions.myCustomOption`</span>\n          <span class="token keyword">const</span> extractedComments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n          <span class="token comment">// Custom logic for extract comments</span>\n\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"uglify-module"</span><span class="token punctuation">)</span> <span class="token comment">// Or require(\'./path/to/uglify-module\')</span>\n            <span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              <span class="token comment">/* Your options for minification */</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">return</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> code<span class="token punctuation">,</span> extractedComments <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="terseroptions"><code>terserOptions</code> <a href="#terseroptions" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>Object</code> 默认值： <a href="https://github.com/terser-js/terser#minify-options">默认</a></p> <p>Terser 压缩<a href="https://github.com/terser-js/terser#minify-options">配置</a> 。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          ecma<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n          parse<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          compress<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          mangle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Note `mangle.properties` is `false` by default.</span>\n          module<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token comment">// Deprecated</span>\n          output<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          format<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          toplevel<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          nameCache<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          ie8<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          keep_classnames<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n          keep_fnames<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          safari10<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="extractcomments"><code>extractComments</code> <a href="#extractcomments" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>Boolean|String|RegExp|Function&#x3C;(node, comment) -> Boolean|Object>|Object</code> 默认值： <code>true</code></p> <p>是否将注释剥离到单独的文件中（请参阅<a href="https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a">详细信息</a>）。 默认情况下，仅剥离 <code>/^\\**!|@preserve|@license|@cc_on/i</code> 正则表达式匹配的注释，其余注释会删除。 如果原始文件名为 <code>foo.js</code> ，则注释将存储到 <code>foo.js.LICENSE.txt</code> 。 <code>terserOptions.format.comments</code> 选项指定是否保留注释，即可以在剥离其他注释时保留一些注释，甚至保留已剥离的注释。</p> <h4 id="boolean"><code>Boolean</code> <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>启用/禁用剥离注释功能。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="string"><code>String</code> <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>剥离 <code>all</code> 或 <code>some</code> （使用 <code>/^\\**!|@preserve|@license|@cc_on/i</code> 正则表达式进行匹配）注释。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="regexp"><code>RegExp</code> <a href="#regexp" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>与指定表达式匹配的所有注释将会被剥离到单独的文件中。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">@extract</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="Functionnode-comment---Boolean-＃functionnode-comment-----boolean-functionnode-comment---boolean-＃functionnode-comment-----boolean"><code>Function&#x3C;(node, comment) -> Boolean></code> {＃functionnode-comment --- boolean} {#functionnode-comment---boolean-＃functionnode-comment-----boolean}<a href="#Functionnode-comment---Boolean-%EF%BC%83functionnode-comment-----boolean-functionnode-comment---boolean-%EF%BC%83functionnode-comment-----boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>与指定表达式匹配的所有注释将会被剥离到单独的文件中。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function-variable function">extractComments</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">astNode<span class="token punctuation">,</span> comment</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">@extract</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="object"><code>Object</code> <a href="#object" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>允许自定义剥离注释的条件，指定剥离的文件名和标题。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token punctuation">{</span>\n          condition<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\**!|@preserve|@license|@cc_on</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n          <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">fileData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">banner</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">licenseFile</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="condition"><code>condition</code> <a href="#condition" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>类型： <code>Boolean|String|RegExp|Function&#x3C;(node, comment) -> Boolean|Object></code></p> <p>自定义需要剥离的注释。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token punctuation">{</span>\n          condition<span class="token operator">:</span> <span class="token string">"some"</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">fileData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">banner</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">licenseFile</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="filename"><code>filename</code> <a href="#filename" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>类型： <code>String|Function&#x3C;(string) -> String></code> 默认值： <code>[file].LICENSE.txt [query]</code></p> <p>可用的占位符： <code>[file]</code> ， <code>[query]</code> 和 <code>[filebase]</code> （webpack 5 使用 <code>[base]</code> ）。</p> <p>剥离出来的注释将被存储到的文件的文件名。 默认是将后缀 <code>.LICENSE.txt</code> 附加到原始文件名。</p> <blockquote> <p>⚠️我们强烈建议使用 <code>txt</code> 扩展名。</p> </blockquote> <p>使用 <code>js</code> / <code>cjs</code> / <code>mjs</code> 扩展名可能会与现有资源文件冲突，从而导致代码运行出错。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token punctuation">{</span>\n          condition<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\**!|@preserve|@license|@cc_on</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n          filename<span class="token operator">:</span> <span class="token string">"extracted-comments.js"/*tpa=https://webpack.docschina.org/extracted-comments.js*/</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">banner</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">licenseFile</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="banner"><code>banner</code> <a href="#banner" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>类型： <code>Boolean|String|Function&#x3C;(string) -> String></code> 默认值： <code>/*! For license information please see ${commentsFile} */</code></p> <p>指向剥离文件的标语文本将被添加到原始文件的顶部。 可以为 <code>false</code> （无标题）， <code>String</code> 或一个函数：<code>Function&#x3C;(string) -> String></code> ，该函数将被使用存储剥离的注释的文件名来调用。 标语内容将被合并到注释中。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token operator">:</span> <span class="token punctuation">{</span>\n          condition<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">fileData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">banner</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">commentsFile</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">My custom banner about license information </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>commentsFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="examples">示例 <a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="preserve-comments">保留注释 <a href="#preserve-comments" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>剥离所有有效的注释（即 <code>/^\\**!|@preserve|@license|@cc_on/i</code> ）并保留 <code>/@license/i</code> 注释。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          format<span class="token operator">:</span> <span class="token punctuation">{</span>\n            comments<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">@license</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        extractComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="remove-comments">删除注释 <a href="#remove-comments" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>如果要在构建时去除注释，请使用以下配置：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          format<span class="token operator">:</span> <span class="token punctuation">{</span>\n            comments<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        extractComments<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="custom-minify-function">自定义压缩函数 <a href="#custom-minify-function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>覆盖默认的 minify 函数 - 使用 <code>uglify-js</code> 进行压缩。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function-variable function">minify</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> sourceMap</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// https://github.com/mishoo/UglifyJS2#minify-options</span>\n          <span class="token keyword">const</span> uglifyJsOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token comment">/* your `uglify-js` package options */</span>\n          <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            uglifyJsOptions<span class="token punctuation">.</span>sourceMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n              content<span class="token operator">:</span> sourceMap<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"uglify-js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> uglifyJsOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="contributing">贡献 <a href="#contributing" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>请花一点时间阅读我们的贡献指南。</p> <p><a href="https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p> <h2 id="license">许可证 <a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/LICENSE">MIT</a></p> '}}]);