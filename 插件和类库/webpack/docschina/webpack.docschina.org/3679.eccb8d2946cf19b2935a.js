(self.webpackChunk=self.webpackChunk||[]).push([[3679],{3679:function(n){n.exports=' <p><a href="https://npmjs.com/package/postcss-loader"><img src="https://img.shields.io/npm/v/postcss-loader.svg" alt="npm"></a> <a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/postcss-loader.svg" alt="node"></a> <a href="https://david-dm.org/webpack-contrib/postcss-loader"><img src="https://david-dm.org/webpack-contrib/postcss-loader.svg" alt="deps"></a> <a href="https://github.com/webpack-contrib/postcss-loader/actions"><img src="https://github.com/webpack-contrib/postcss-loader/workflows/postcss-loader/badge.svg" alt="tests"></a> <a href="https://codecov.io/gh/webpack-contrib/postcss-loader"><img src="https://codecov.io/gh/webpack-contrib/postcss-loader/branch/master/graph/badge.svg" alt="coverage"></a> <a href="https://packagephobia.now.sh/result?p=postcss-loader"><img src="https://packagephobia.now.sh/badge?p=postcss-loader" alt="size"></a></p> <p>Webpack chat: <a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a></p> <p>PostCSS chat: <a href="https://gitter.im/postcss/postcss"><img src="https://badges.gitter.im/postcss/postcss.svg" alt="chat-postcss"></a></p> <p>使用 <a href="https://github.com/postcss/postcss"><code>PostCSS</code></a> 处理 CSS 的 loader。</p> <h2 id="getting-started">快速开始 <a href="#getting-started" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>为了使用本 loader，你需要安装 <code>postcss-loader</code> 和 <code>postcss</code>：</p> <pre><code class="hljs language-console">npm install --save-dev postcss-loader postcss\n</code></pre> <p>然后添加本 loader 的相关配置到你的 <code>webpack</code> 的配置文件。例如：</p> <p><strong>file.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">import</span> css <span class="token keyword">from</span> <span class="token string">"file.css"/*tpa=https://webpack.docschina.org/file.css*/</span><span class="token punctuation">;</span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">[</span>\n                    <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                      <span class="token comment">// 其他选项</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>或者使用 PostCSS 本身的 <a href="#config">配置文件</a>：</p> <p><strong>postcss.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// 其他选项</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>Loader 将会<strong>自动</strong>搜索配置文件。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>最后，通过你喜欢的方式运行 <code>webpack</code>。</p> <h2 id="options">选项 <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <table> <thead> <tr> <th align="center">名称</th> <th align="center">类型</th> <th align="center">默认值</th> <th align="left">描述</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="名称"><span><a href="#execute"><code>execute</code></a></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>undefined</code></span></td> <td align="left" data-th="描述"><span>在 <code>CSS-in-JS</code> 中启动 PostCSS Parser 支持</span></td> </tr> <tr> <td align="center" data-th="名称"><span><a href="#postcssoptions"><code>postcssOptions</code></a></span></td> <td align="center" data-th="类型"><span><code>{Object|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>Postcss.process的默认值</code></span></td> <td align="left" data-th="描述"><span>设置 <code>PostCSS</code> 选项与插件</span></td> </tr> <tr> <td align="center" data-th="名称"><span><a href="#sourcemap"><code>sourceMap</code></a></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>compiler.devtool</code></span></td> <td align="left" data-th="描述"><span>开启 / 关闭 source map 的生成</span></td> </tr> </tbody> </table> <h3 id="execute"><code>execute</code><a href="#execute" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean</code> 默认值：<code>undefined</code></p> <p>如果你在 JS 文件中编写样式，请使用 <a href="https://github.com/postcss/postcss-js"><code>postcss-js</code></a> parser，并且添加 <code>execute</code> 选项。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.style.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                parser<span class="token operator">:</span> <span class="token string">"postcss-js"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              execute<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="postcss-options"><code>postcssOptions</code> <a href="#postcss-options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Object|Function</code> 默认值：<code>undefined</code></p> <p>允许设置 <a href="http://api.postcss.org/global.html#processoptions"><code>PostCSS 选项</code></a> 和插件。</p> <p>支持所有的 <code>PostCSS</code> 选项。 这是配置文件中特殊的 <code>配置</code> 选项。它如何工作、如何配置再接下来的部分将会有详细的描述。</p> <p>因为可能会导致 source map 中错误的文件路径，我们不推荐使用指定的 <code>from</code>、<code>to</code> 和 <code>map</code> 选项。 如果你需要 source map，请使用 <a href="#sourcemap"><code>sourcemap</code></a> 选项。</p> <h4 id="Object"><code>Object</code><a href="#Object" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>设置 <code>plugins</code>：</p> <p><strong>webpack.config.js</strong> (<strong>recommended</strong>)</p> <pre><code class="hljs language-js"><span class="token keyword">const</span> myOtherPostcssPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"postcss-my-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">"postcss-import"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"my-postcss-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token function">myOtherPostcssPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> myOption<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token comment">// 废弃的，将会在下一个主要版本中移除</span>\n              <span class="token punctuation">{</span> <span class="token string">"postcss-nested"</span><span class="token operator">:</span> <span class="token punctuation">{</span> preserveEmpty<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><strong>webpack.config.js</strong> （<strong>废弃的</strong>，将会在下一个主要版本中移除）</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            plugins<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token string">"postcss-import"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token string">"postcss-short"</span><span class="token operator">:</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>设置 <code>syntax</code>：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 可以是 `String`</span>\n            syntax<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n            <span class="token comment">// 可以是 `Object`</span>\n            syntax<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sugarss"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>设置 <code>parser</code>：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 可以是 `String`</span>\n            parser<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n            <span class="token comment">// 可以是 `Object`</span>\n            parser<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sugarss"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">// 可以是 `Function`</span>\n            parser<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sugarss"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parse<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>设置 <code>stringifier</code>：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> Midas <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"midas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> midas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Midas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 可以是 `String`</span>\n            stringifier<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n            <span class="token comment">// 可以是 `Object`</span>\n            stringifier<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sugarss"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">// 可以是 `Function`</span>\n            stringifier<span class="token operator">:</span> midas<span class="token punctuation">.</span>stringifier<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="Function"><code>Function</code><a href="#Function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(css|sss)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">postcssOptions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>loaderContext<span class="token punctuation">.</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                parser<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n              plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="config"><code>config</code> <a href="#config" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Boolean|String</code> 默认值：<code>undefined</code></p> <p>允许使用配置文件设置选项。 在配置文件中指定的选项将会和 loader option 进行合并，并且 loader option 将会覆盖配置文件中的选项。</p> <h5 id="config-files">配置文件 <a href="#config-files" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>Loader 将会从下面几个地方搜索目录树来寻找配置文件：</p> <ul> <li><code>package.json</code> 中的 <code>postcss</code> 属性</li> <li>JSON 或者 YAML 格式的 <code>.postcssrc</code> 文件</li> <li><code>.postcss.json</code>、<code>.postcss.yaml</code>、<code>.postcss.yml</code>、<code>.postcss.js</code> 或者 <code>.postcss.cjs</code> 文件</li> <li><code>postcss.config.js</code> 或者 <code>postcss.config.cjs</code> 导出一个对象的 CommonJS 模块（<strong>推荐</strong>）</li> </ul> <h5 id="examples-of-config-files">配置文件示例 <a href="#examples-of-config-files" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>使用 <code>Object</code>：</p> <p><strong>postcss.config.js</strong>（<strong>推荐</strong>）</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 你可以指定下面提到的所有选项 https://postcss.org/api/#processoptions</span>\n  <span class="token comment">// parser: \'sugarss\',</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// PostCSS 插件</span>\n    <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>使用 <code>Function</code>：</p> <p><strong>postcss.config.js</strong>（<strong>推荐</strong>）</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// `api.file` - 文件路径</span>\n  <span class="token comment">// `api.mode` - webpack 的 `mode` 属性值，请查阅 https://webpack.js.org/configuration/mode/</span>\n  <span class="token comment">// `api.webpackLoaderContext` - 在复杂情况下使用的 loader 上下文</span>\n  <span class="token comment">// `api.env` - `api.mode` 的别名，与 `postcss-cli` 兼容</span>\n  <span class="token comment">// `api.options` - `postcssOptions` 的选项</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token comment">//你可以指定下面提到的所有选项 https://postcss.org/api/#processoptions here</span>\n      parser<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// PostCSS 插件</span>\n        <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 你可以指定下面提到的所有选项 https://postcss.org/api/#processoptions</span>\n    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// PostCSS 插件</span>\n      <span class="token punctuation">[</span><span class="token string">"postcss-short"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><strong>postcss.config.js</strong>（<strong>废弃的</strong>，将会在下一个主要版本中移除）</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 你可以指定下面提到的所有选项 https://postcss.org/api/#processoptions</span>\n  <span class="token comment">// parser: \'sugarss\',</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// PostCSS 插件</span>\n    <span class="token string">"postcss-short"</span><span class="token operator">:</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">"x"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">"postcss-preset-env"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="config-cascade">配置级联 <a href="#config-cascade" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <p>你可以在不同的目录中使用不同的 <code>postcss.config.js</code> 文件。 配置文件的寻找从 <code>path.dirname(file)</code> 开始根据文件树向上寻找，直至找到一个配置文件。</p> <pre><code>|– components\n| |– component\n| | |– index.js\n| | |– index.png\n| | |– style.css (1)\n| | |– postcss.config.js (1)\n| |– component\n| | |– index.js\n| | |– image.png\n| | |– style.css (2)\n|\n|– postcss.config.js (1 &#x26;&#x26; 2 (recommended))\n|– webpack.config.js\n|\n|– package.json\n</code></pre> <p>在设置 <code>postcss.config.js</code> 之后，将 <code>postcss-loader</code> 添加到 <code>webpack.config.js</code> 中。 你可以单独使用它，或者与 <code>css-loader</code> 结合使用（推荐）。</p> <p>在 <code>css-loader</code> 和 <code>style-loader</code> <strong>之前</strong>使用它，但是在其他预处理器（例如：<code>sass|less|stylus-loader</code>）<strong>之后</strong>使用 （因为 <a href="concepts/loaders/index.htm#configuration"/*tpa=https://webpack.docschina.org/concepts/loaders/#configuration*/>webpack loader 从右到左 / 从底到顶执行</a>）。</p> <p><strong>webpack.config.js</strong> （<strong>推荐</strong>）</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              importLoaders<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="boolean">Boolean <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>开启 / 关闭自动加载配置。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            config<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="string">String <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>允许指定配置文件路径。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n            config<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"custom.config.js"/*tpa=https://webpack.docschina.org/custom.config.js*/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="source-map"><code>sourceMap</code> <a href="#source-map" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean</code> 默认值：依赖于 <code>compiler.devtool</code> 的值</p> <p>默认情况下 source map 的生成依赖于 <a href="configuration/devtool/index.htm"/*tpa=https://webpack.docschina.org/configuration/devtool/*/><code>devtool</code></a>选项。 除 <code>eval</code> 和 <code>false</code> 外，其他的值都将打开 source map 生成。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"style-loader"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token punctuation">{</span> sourceMap<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token punctuation">{</span> sourceMap<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token punctuation">{</span> sourceMap<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>替代设置：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devtool<span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"style-loader"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"css-loader"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">"sass-loader"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="examples">例子 <a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="sugarss">SugarSS <a href="#sugarss" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你需要安装 <code>sugarss</code>：</p> <pre><code class="hljs language-console">npm install --save-dev sugarss\n</code></pre> <p>使用 <a href="https://github.com/postcss/sugarss"><code>SugarSS</code></a> 句法分析器。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.sss$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span> importLoaders<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                parser<span class="token operator">:</span> <span class="token string">"sugarss"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="autoprefixer">Autoprefixer <a href="#autoprefixer" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你需要安装 <code>autoprefixer</code>：</p> <pre><code class="hljs language-console">npm install --save-dev autoprefixer\n</code></pre> <p>使用 <a href="https://github.com/postcss/autoprefixer"><code>autoprefixer</code></a> 添加厂商前缀。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span> importLoaders<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">[</span>\n                    <span class="token string">"autoprefixer"</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                      <span class="token comment">// 选项</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <blockquote> <p>:warning: <a href="https://github.com/csstools/postcss-preset-env"><code>postcss-preset-env</code></a> 包含 <a href="https://github.com/postcss/autoprefixer"><code>autoprefixer</code></a>，因此如果你已经使用了 preset 就无需单独添加它了。更多 <a href="https://github.com/csstools/postcss-preset-env#autoprefixer">信息</a></p> </blockquote> <h3 id="postcss-preset-env">PostCSS Preset Env <a href="#postcss-preset-env" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你需要安装 <code>postcss-preset-env</code>：</p> <pre><code class="hljs language-console">npm install --save-dev postcss-preset-env\n</code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span> importLoaders<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">[</span>\n                    <span class="token string">"postcss-preset-env"</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                      <span class="token comment">// 选项</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="css-modules">CSS Modules <a href="#css-modules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>什么是 <code>CSS Modules</code>？请 <a href="https://github.com/webpack-contrib/css-loader#modules">阅读</a>。</p> <p>在 <code>postcss-loader</code> 中没有额外的设置。 为了使他们正常工作，请添加 <code>css-loader</code> 的 <code>importLoaders</code> 选项。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              modules<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              importLoaders<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="css-in-js-and-postcss-js">CSS-in-JS and <a href="https://github.com/postcss/postcss-js"><code>postcss-js</code></a> <a href="#css-in-js-and-postcss-js" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你需要安装 <code>postcss-js</code>：</p> <pre><code class="hljs language-console">npm install --save-dev postcss-js\n</code></pre> <p>如果你想处理写在 JavaScript 中的样式，那么你需要使用 <a href="https://github.com/postcss/postcss-js"><code>postcss-js</code></a> parser。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.style.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              importLoaders<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                parser<span class="token operator">:</span> <span class="token string">"postcss-js"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              execute<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>接下来你就可以像下面这样书写样式了</p> <pre><code class="hljs language-js"><span class="token keyword">import</span> colors <span class="token keyword">from</span> <span class="token string">"./styles/colors"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token string">".menu"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    color<span class="token operator">:</span> colors<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n    <span class="token string">"&#x26;_link"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      color<span class="token operator">:</span> <span class="token string">"white"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <blockquote> <p>:warning: 如果你正在使用 Babel且为了程序正常工作，你需要进行下面的步骤：</p> </blockquote> <blockquote> <ol> <li>添加 <a href="https://github.com/59naga/babel-plugin-add-module-exports"><code>babel-plugin-add-module-exports</code></a> 到你的配置中。</li> <li>你需要在每一个样式模块中有一个<strong>默认</strong>导出。</li> </ol> </blockquote> <h3 id="extract-cssextractplugin">提取 CSS <a href="#extract-cssextractplugin" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>使用 <a href="plugins/mini-css-extract-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/mini-css-extract-plugin/*/><code>mini-css-extract-plugin</code></a>。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> isProductionMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> isProductionMode <span class="token operator">?</span> <span class="token string">"production"</span> <span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          isProductionMode <span class="token operator">?</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader <span class="token operator">:</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> isProductionMode <span class="token operator">?</span> <span class="token string">"[name].[contenthash].css"/*tpa=https://webpack.docschina.org/[name].[contenthash].css*/</span> <span class="token operator">:</span> <span class="token string">"[name].css"/*tpa=https://webpack.docschina.org/[name].css*/</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="emit-assets">触发资源打包 <a href="#emit-assets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>要将资源从 PostCSS 插件写到 webpack，需要向 <code>result.messages</code> 中添加一条消息。</p> <p>一条符合规范的消息应该包含下面的字段：</p> <ul> <li><code>type</code> = <code>asset</code> - 消息类型（必需字段，并且应该为 <code>asset</code>）</li> <li><code>file</code> - 文件名称（必需）</li> <li><code>content</code> - 文件内容（必需）</li> <li><code>sourceMap</code> - sourceMap</li> <li><code>info</code> - 资源信息</li> </ul> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token function-variable function">customPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">css<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  result<span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token string">"asset"</span><span class="token punctuation">,</span>\n    file<span class="token operator">:</span> <span class="token string">"https://webpack.docschina.org/sprite.svg"</span><span class="token punctuation">,</span>\n    content<span class="token operator">:</span> <span class="token string">"&#x3C;svg>...&#x3C;/svg>"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> postcssPlugin <span class="token operator">=</span> postcss<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">"postcss-assets"</span><span class="token punctuation">,</span> customPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">postcssPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="add-dependencies">添加依赖 <a href="#add-dependencies" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>当需要在文件变化时进行重新编译时，webpack 为了理解这样的操作需要添加必要的依赖。</p> <p>由两种方式添加依赖：</p> <ol> <li>（推荐）。插件在 <code>result.messages</code> 中触发消息。</li> </ol> <p>消息应该包含下面两个字段：</p> <ul> <li><code>type</code> = <code>dependency</code> - 消息类型（必需字段，并且应该为 <code>dependency</code>）</li> <li><code>file</code> - 文件的绝对路径（必需）</li> </ul> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">customPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">css<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  result<span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token string">"dependency"</span><span class="token punctuation">,</span>\n    file<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"path"</span><span class="token punctuation">,</span> <span class="token string">"to"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> postcssPlugin <span class="token operator">=</span> postcss<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">"postcss-assets"</span><span class="token punctuation">,</span> customPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">postcssPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <ol start="2"> <li>在插件中传递 <code>loaderContext</code>。</li> </ol> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                config<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"path/to/postcss.config.js"/*tpa=https://webpack.docschina.org/path/to/postcss.config.js*/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><strong>postcss.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path/to/customPlugin"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      loaderContext<span class="token operator">:</span> api<span class="token punctuation">.</span>webpackLoaderContext<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>customPlugin.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">customPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">css<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  loaderContext<span class="token punctuation">.</span>webpack<span class="token punctuation">.</span><span class="token function">addDependency</span><span class="token punctuation">(</span>\n    path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"path"</span><span class="token punctuation">,</span> <span class="token string">"to"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> postcss<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">"postcss-assets"</span><span class="token punctuation">,</span> customPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2 id="contributing">贡献 <a href="#contributing" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你还没有读过我们的贡献指南，请花一点时间阅读它。</p> <p><a href="https://github.com/webpack-contrib/postcss-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p> <h2 id="license">License <a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/postcss-loader/blob/master/LICENSE">MIT</a></p> '}}]);