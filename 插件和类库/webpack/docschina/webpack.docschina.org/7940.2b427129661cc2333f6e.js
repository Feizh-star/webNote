(self.webpackChunk=self.webpackChunk||[]).push([[7940],{7940:function(n){n.exports='<p>解析器是使用 <code>enhanced-resolve</code> 库创建的。<code>Resolver</code> 类 拓展了 <code>tapable</code> 类，并使用 <code>tapable</code> 来提供了一些钩子。 <code>enhanced-resolve</code> 可以直接用于创建新的解析器， 但是，任何 <a href="api/node/index.htm#compiler-instance"/*tpa=https://webpack.docschina.org/api/node/#compiler-instance*/><code>compiler</code> 实例</a> 都有一些解析器实例，可以 被 <code>tap</code> 进去。</p> <p>在继续阅读之前，请确保你已经读过 <a href="https://github.com/webpack/enhanced-resolve"><code>enhanced-resolve</code></a> 和 <a href="api/plugins/index.htm#tapable"/*tpa=https://webpack.docschina.org/api/plugins/#tapable*/><code>tapable</code></a> 文档。</p> <h2 id="types">类型 <a href="#types" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>在 <code>compiler</code> 类中，提供了三种类型的内置解析器：</p> <ul> <li><code>normal</code>: 通过绝对或相对路径解析模块。</li> <li><code>context</code>: 在给定的上下文中解析模块。</li> <li><code>loader</code>: 解析 webpack <a href="loaders.htm"/*tpa=https://webpack.docschina.org/loaders*/>loader</a>。</li> </ul> <p>根据需要，任一个被使用在 <code>compiler</code> 中的内置解析器， 可以通过插件进行定制：</p> <pre><code class="hljs language-js">compiler<span class="token punctuation">.</span>resolverFactory<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>resolver<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">\'[type]\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token parameter">resolver</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// you can tap into resolver.hooks now</span>\n  resolver<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">\'MyPlugin\'</span><span class="token punctuation">,</span> <span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>其中，<code>[type]</code> 是上述三个解析器之一。</p> <p>请参阅 <a href="https://github.com/webpack/enhanced-resolve"><code>enhanced-resolve</code> documentation</a> 以获得钩子的完整列表以及它们的介绍。</p> <h2 id="configuration-options">配置选项 <a href="#configuration-options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>上述解析器也可以 利用 <a href="configuration/resolve/index.htm"/*tpa=https://webpack.docschina.org/configuration/resolve/*/><code>resolve</code></a> or <a href="configuration/resolve/index.htm#resolveloader"/*tpa=https://webpack.docschina.org/configuration/resolve/#resolveloader*/><code>resolveLoader</code></a> 选项，通过配置文件进行定制。这些选项允许 用户可以通过多种选项来更改解析行为，包括 通过解析 <code>plugins</code>。</p> <p>解析器插件，例如：<a href="https://github.com/shaketbaby/directory-named-webpack-plugin"><code>DirectoryNamedPlugin</code></a>，可以直接引入 在 <code>resolve.plugins</code>，而不是直接在 <a href="configuration/plugins/index.htm#plugins"/*tpa=https://webpack.docschina.org/configuration/plugins/#plugins*/><code>plugins</code> configuration option</a> 中使用。</p> <blockquote class="tip"> <p>请注意，<code>resolve</code> 配置会影响 <code>normal</code> 解析器和 <code>context</code> 解析器，而“ <code>resolveLoader</code> 用于修改 <code>loader</code> 解析器。</p> </blockquote> '}}]);