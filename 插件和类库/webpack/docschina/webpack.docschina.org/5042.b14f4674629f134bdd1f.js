(self.webpackChunk=self.webpackChunk||[]).push([[5042],{5042:function(t){t.exports='<p>webpack 并非唯一的模块打包工具。当您面临选择 webpack 或者是其他模块打包工具时，请参见以下 webpack 与其他竞品的功能对比表格。</p> <table> <thead> <tr> <th>特性</th> <th>webpack/webpack</th> <th>jrburke/requirejs</th> <th>substack/node-browserify</th> <th>jspm/jspm-cli</th> <th>rollup/rollup</th> <th>brunch/brunch</th> </tr> </thead> <tbody> <tr> <td data-th="特性"><span>按需加载额外 chunks</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span><a href="https://github.com/systemjs/systemjs/blob/master/docs/system-api.md#systemimportmodulename--normalizedparentname---promisemodule">System.import</a></span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>AMD <code>define</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/jaredhanson/deamdify">deamdify</a></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/piuccio/rollup-plugin-amd">rollup-plugin-amd</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>AMD <code>require</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>AMD <code>require</code> 按需加载</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>手动配置</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>CommonJS <code>exports</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>仅包裹在 <code>define</code> 中</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>CommonJS <code>require</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>仅包裹在 <code>define</code> 中</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>CommonJS <code>require.resolve</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>在 require 中使用拼接 <code>require("./fi" + "le")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>调试支持</span></td> <td data-th="webpack/webpack"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="jrburke/requirejs"><span>未引入</span></td> <td data-th="substack/node-browserify"><span>SourceMaps</span></td> <td data-th="jspm/jspm-cli"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="rollup/rollup"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="brunch/brunch"><span>SourceMaps</span></td> </tr> <tr> <td data-th="特性"><span>依赖列表（Dependencies）</span></td> <td data-th="webpack/webpack"><span>19MB / 127 个 package</span></td> <td data-th="jrburke/requirejs"><span>11MB / 118 个 package</span></td> <td data-th="substack/node-browserify"><span><strong>1.2MB / 1 package</strong></span></td> <td data-th="jspm/jspm-cli"><span>26MB / 131 个 package</span></td> <td data-th="rollup/rollup"><span>?MB / 3 个 package</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>ES2015 <code>import</code>/<code>export</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong> (webpack 2)</span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span><strong>yes</strong></span></td> <td data-th="rollup/rollup"><span><strong>yes</strong></span></td> <td data-th="brunch/brunch"><span>yes，通过 <a href="https://github.com/gcollazo/es6-module-transpiler-brunch">es6 module 转译器</a></span></td> </tr> <tr> <td data-th="特性"><span>require 中使用表达式 (guided) <code>require("./templates/" + template)</code></span></td> <td data-th="webpack/webpack"><span><strong>yes（包含所有匹配到的文件）</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>require 中使用表达式 (free) <code>require(moduleName)</code></span></td> <td data-th="webpack/webpack"><span>手动配置</span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>生成单文件 bundle</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>yes♦</span></td> <td data-th="substack/node-browserify"><span>yes</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>yes</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>间接 require <code>var r = require; r("./file")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>单独加载某个文件</span></td> <td data-th="webpack/webpack"><span>no</span></td> <td data-th="jrburke/requirejs"><span>yes</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>混淆路径名称</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>部分</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>未引入（路径名称未包含在 bundle 中）</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>压缩</span></td> <td data-th="webpack/webpack"><span><a href="https://github.com/fabiosantoscode/terser">Terser</a></span></td> <td data-th="jrburke/requirejs"><span>uglify, closure compiler</span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/hughsk/uglifyify">uglifyify</a></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/TrySound/rollup-plugin-uglify">uglify-plugin</a></span></td> <td data-th="brunch/brunch"><span><a href="https://github.com/brunch/uglify-js-brunch">UglifyJS-brunch</a></span></td> </tr> <tr> <td data-th="特性"><span>使用 common bundle 构建多页应用</span></td> <td data-th="webpack/webpack"><span>手动配置</span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>手动配置</span></td> <td data-th="jspm/jspm-cli"><span>使用 bundle 算法</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="特性"><span>多个 bundle</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>手动配置</span></td> <td data-th="substack/node-browserify"><span>手动配置</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>Node.js 内置库 <code>require("path")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span><strong>yes</strong></span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-node-resolve">node-resolve-plugin</a></span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>其他 Node.js 相关内容</span></td> <td data-th="webpack/webpack"><span>process，__dir/filename，global</span></td> <td data-th="jrburke/requirejs"><span>-</span></td> <td data-th="substack/node-browserify"><span>process，__dir/filename，global</span></td> <td data-th="jspm/jspm-cli"><span>process，__dir/filename，global for cjs</span></td> <td data-th="rollup/rollup"><span>global (<a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a>)</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>Plugin</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>yes</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>yes</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="特性"><span>预处理</span></td> <td data-th="webpack/webpack"><span><strong>loaders</strong></span></td> <td data-th="jrburke/requirejs"><span>loaders</span></td> <td data-th="substack/node-browserify"><span>transforms</span></td> <td data-th="jspm/jspm-cli"><span>plugin translate</span></td> <td data-th="rollup/rollup"><span>plugin transforms</span></td> <td data-th="brunch/brunch"><span>compilers，optimizers</span></td> </tr> <tr> <td data-th="特性"><span>浏览器替换项</span></td> <td data-th="webpack/webpack"><span><code>web_modules</code>，<code>.web.js</code>，package.json 字段，别名（alias）配置项</span></td> <td data-th="jrburke/requirejs"><span>别名配置项</span></td> <td data-th="substack/node-browserify"><span>package.json 字段，别名配置项</span></td> <td data-th="jspm/jspm-cli"><span>package.json，别名配置项</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>读取文件</span></td> <td data-th="webpack/webpack"><span>文件系统</span></td> <td data-th="jrburke/requirejs"><span><strong>web</strong></span></td> <td data-th="substack/node-browserify"><span>文件系统</span></td> <td data-th="jspm/jspm-cli"><span>使用插件</span></td> <td data-th="rollup/rollup"><span>文件系统或者使用插件</span></td> <td data-th="brunch/brunch"><span>文件系统</span></td> </tr> <tr> <td data-th="特性"><span>运行时开销</span></td> <td data-th="webpack/webpack"><span><strong>每个模块 243B + 20B + 每个依赖 4B</strong></span></td> <td data-th="jrburke/requirejs"><span>每个模块 14.7kB + 0B + 每个依赖 (3B + X)</span></td> <td data-th="substack/node-browserify"><span>每个模块 415B + 25B + 每个依赖 (6B + 2X)</span></td> <td data-th="jspm/jspm-cli"><span>自运行 bundle 5.5kB，所有 loader 和 polyfill 38kB，普通模块 0，293B CJS，ES2015 System.register 压缩 (gzip) 前 139B</span></td> <td data-th="rollup/rollup"><span><strong>ES2015 module 无开销</strong> （其他格式可能会有）</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="特性"><span>监听模式</span></td> <td data-th="webpack/webpack"><span>yes</span></td> <td data-th="jrburke/requirejs"><span>未引入</span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/browserify/watchify">watchify</a></span></td> <td data-th="jspm/jspm-cli"><span>dev 中未引入</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-watch">rollup-watch</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> </tbody> </table> <p>♦ 为生成模式 (开发模式取反值)</p> <p>X 为路径字符串的长度</p> <h2 id="bundling-vs-loading">打包与加载 <a href="#bundling-vs-loading" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>了解 <em>loading</em> 和 <em>bundling</em> 模块的一些主要区别是很有必要的。比如像 <a href="https://github.com/systemjs/systemjs">SystemJS</a> 这类的工具，本质上是基于 <a href="https://github.com/jspm/jspm-cli">JSPM</a>, 常应用于在浏览器运行时加载和转译模块。这就与 webpack 有很大的差异，因为在 webpack 中模块是在浏览器加载之前，就已经被转译过（通过 loaders 转译）并打包的。</p> <p>每种方法都有其长，也有其短。如果是包括较多模块的大型网站和应用程序，在运行时加载和转译模块，会使其增加许多开销。故而，SystemJS 更加适用于模块较少的小型项目。不过，在判定哪些文件可以从服务端转到客户端时，<a href="https://http2.github.io/">HTTP/2</a> 倒是能提升一些速度。请注意，HTTP/2 并不会改变 <em>transpiling</em> 模块，所以在客户端会增加时间开销。</p> '}}]);