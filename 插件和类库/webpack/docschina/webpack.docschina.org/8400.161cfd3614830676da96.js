(self.webpackChunk=self.webpackChunk||[]).push([[8400],{8400:function(a){a.exports='<p>此选项控制是否生成，以及如何生成 source map。</p> <p>使用 <a href="plugins/source-map-dev-tool-plugin.htm"/*tpa=https://webpack.docschina.org/plugins/source-map-dev-tool-plugin*/><code>SourceMapDevToolPlugin</code></a> 进行更细粒度的配置。查看 <a href="loaders/source-map-loader.htm"/*tpa=https://webpack.docschina.org/loaders/source-map-loader*/><code>source-map-loader</code></a> 来处理已有的 source map。</p> <h2 id="devtool"><code>devtool</code> <a href="#devtool" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>string = \'eval\'</code> <code>false</code></p> <p>选择一种 <a href="http://blog.teamtreehouse.com/introduction-source-maps">source map</a> 格式来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。</p> <blockquote class="tip"> <p>webpack 仓库中包含一个 <a href="https://github.com/webpack/webpack/tree/master/examples/source-map">显示所有 <code>devtool</code> 变体效果的示例</a>。这些例子或许会有助于你理解这些差异之处。</p> </blockquote> <blockquote class="tip"> <p>你可以直接使用 <code>SourceMapDevToolPlugin</code>/<code>EvalSourceMapDevToolPlugin</code> 来替代使用 <code>devtool</code> 选项，因为它有更多的选项。切勿同时使用 <code>devtool</code> 选项和 <code>SourceMapDevToolPlugin</code>/<code>EvalSourceMapDevToolPlugin</code> 插件。<code>devtool</code> 选项在内部添加过这些插件，所以你最终将应用两次插件。</p> </blockquote> <table> <thead> <tr> <th>devtool</th> <th>构建速度</th> <th>重新构建速度</th> <th>生产环境</th> <th>品质(quality)</th> </tr> </thead> <tbody> <tr> <td data-th="devtool"><span>(none)</span></td> <td data-th="构建速度"><span>非常快速</span></td> <td data-th="重新构建速度"><span>非常快速</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>打包后的代码</span></td> </tr> <tr> <td data-th="devtool"><span>eval</span></td> <td data-th="构建速度"><span>非常快速</span></td> <td data-th="重新构建速度"><span>非常快速</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>生成后的代码</span></td> </tr> <tr> <td data-th="devtool"><span>eval-cheap-source-map</span></td> <td data-th="构建速度"><span>比较快</span></td> <td data-th="重新构建速度"><span>快速</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>转换过的代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>eval-cheap-module-source-map</span></td> <td data-th="构建速度"><span>中等</span></td> <td data-th="重新构建速度"><span>快速</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>原始源代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>eval-source-map</span></td> <td data-th="构建速度"><span>慢</span></td> <td data-th="重新构建速度"><span>比较快</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>原始源代码</span></td> </tr> <tr> <td data-th="devtool"><span>eval-nosources-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>eval-nosources-cheap-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>eval-nosources-cheap-module-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>cheap-source-map</span></td> <td data-th="构建速度"><span>比较快</span></td> <td data-th="重新构建速度"><span>中等</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>转换过的代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>cheap-module-source-map</span></td> <td data-th="构建速度"><span>中等</span></td> <td data-th="重新构建速度"><span>比较慢</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>原始源代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>inline-cheap-source-map</span></td> <td data-th="构建速度"><span>比较快</span></td> <td data-th="重新构建速度"><span>中等</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>转换过的代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>inline-cheap-module-source-map</span></td> <td data-th="构建速度"><span>中等</span></td> <td data-th="重新构建速度"><span>比较慢</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>原始源代码（仅限行）</span></td> </tr> <tr> <td data-th="devtool"><span>inline-source-map</span></td> <td data-th="构建速度"><span>慢</span></td> <td data-th="重新构建速度"><span>慢</span></td> <td data-th="生产环境"><span>no</span></td> <td data-th="品质(quality)"><span>原始源代码</span></td> </tr> <tr> <td data-th="devtool"><span>inline-nosources-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>inline-nosources-cheap-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>inline-nosources-cheap-module-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>source-map</span></td> <td data-th="构建速度"><span>慢</span></td> <td data-th="重新构建速度"><span>慢</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>原始源代码</span></td> </tr> <tr> <td data-th="devtool"><span>hidden-source-map</span></td> <td data-th="构建速度"><span>慢</span></td> <td data-th="重新构建速度"><span>慢</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>原始源代码</span></td> </tr> <tr> <td data-th="devtool"><span>hidden-nosources-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>hidden-nosources-cheap-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>hidden-nosources-cheap-module-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>hidden-cheap-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>hidden-cheap-module-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>nosources-source-map</span></td> <td data-th="构建速度"><span>慢</span></td> <td data-th="重新构建速度"><span>慢</span></td> <td data-th="生产环境"><span>yes</span></td> <td data-th="品质(quality)"><span>无源代码内容</span></td> </tr> <tr> <td data-th="devtool"><span>nosources-cheap-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span>nosources-cheap-module-source-map</span></td> <td data-th="构建速度"><span>-</span></td> <td data-th="重新构建速度"><span>-</span></td> <td data-th="生产环境"><span>-</span></td> <td></td> </tr> </tbody> </table> <blockquote class="tip"> <p>验证 devtool 名称时， 我们期望使用某种模式， 注意不要混淆 devtool 字符串的顺序， 模式是： <code>[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map</code>.</p> </blockquote> <p>其中一些值适用于开发环境，一些适用于生产环境。对于开发环境，通常希望更快速的 source map，需要添加到 bundle 中以增加体积为代价，但是对于生产环境，则希望更精准的 source map，需要从 bundle 中分离并独立存在。</p> <blockquote class="warning"> <p>Chrome 中的 source map 有一些问题。<a href="https://github.com/webpack/webpack/issues/3165">我们需要你的帮助！</a>。</p> </blockquote> <blockquote class="tip"> <p>查看 <a href="configuration/output.htm#output-sourcemapfilename"/*tpa=https://webpack.docschina.org/configuration/output#output-sourcemapfilename*/><code>output.sourceMapFilename</code></a> 自定义生成的 source map 的文件名。</p> </blockquote> <h3 id="qualities">品质说明(quality) <a href="#qualities" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>打包后的代码</code> - 将所有生成的代码视为一大块代码。你看不到相互分离的模块。</p> <p><code>生成后的代码</code> - 每个模块相互分离，并用模块名称进行注释。可以看到 webpack 生成的代码。示例：你会看到类似 <code>var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();</code>，而不是 <code>import {test} from "module"; test();</code>。</p> <p><code>转换过的代码</code> - 每个模块相互分离，并用模块名称进行注释。可以看到 webpack 转换前、loader 转译后的代码。示例：你会看到类似 <code>import {test} from "module"; var A = function(_test) { ... }(test);</code>，而不是 <code>import {test} from "module"; class A extends test {}</code>。</p> <p><code>原始源代码</code> - 每个模块相互分离，并用模块名称进行注释。你会看到转译之前的代码，正如编写它时。这取决于 loader 支持。</p> <p><code>无源代码内容</code> - source map 中不包含源代码内容。浏览器通常会尝试从 web 服务器或文件系统加载源代码。你必须确保正确设置 <a href="configuration/output/index.htm#output-devtoolmodulefilenametemplate"/*tpa=https://webpack.docschina.org/configuration/output/#output-devtoolmodulefilenametemplate*/><code>output.devtoolModuleFilenameTemplate</code></a>，以匹配源代码的 url。</p> <p><code>（仅限行）</code> - source map 被简化为每行一个映射。这通常意味着每个语句只有一个映射（假设你使用这种方式）。这会妨碍你在语句级别上调试执行，也会妨碍你在每行的一些列上设置断点。与压缩后的代码组合后，映射关系是不可能实现的，因为压缩工具通常只会输出一行。</p> <h3 id="development">对于开发环境 <a href="#development" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>以下选项非常适合开发环境：</p> <p><code>eval</code> - 每个模块都使用 <code>eval()</code> 执行，并且都有 <code>//@ sourceURL</code>。此选项会非常快地构建。主要缺点是，由于会映射到转换后的代码，而不是映射到原始代码（没有从 loader 中获取 source map），所以不能正确的显示行数。</p> <p><code>eval-source-map</code> - 每个模块使用 <code>eval()</code> 执行，并且 source map 转换为 DataUrl 后添加到 <code>eval()</code> 中。初始化 source map 时比较慢，但是会在重新构建时提供比较快的速度，并且生成实际的文件。行数能够正确映射，因为会映射到原始代码中。它会生成用于开发环境的最佳品质的 source map。</p> <p><code>eval-cheap-source-map</code> - 类似 <code>eval-source-map</code>，每个模块使用 <code>eval()</code> 执行。这是 "cheap(低开销)" 的 source map，因为它没有生成列映射(column mapping)，只是映射行数。它会忽略源自 loader 的 source map，并且仅显示转译后的代码，就像 <code>eval</code> devtool。</p> <p><code>eval-cheap-module-source-map</code> - 类似 <code>eval-cheap-source-map</code>，并且，在这种情况下，源自 loader 的 source map 会得到更好的处理结果。然而，loader source map 会被简化为每行一个映射(mapping)。</p> <h3 id="special-cases">特定场景 <a href="#special-cases" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>以下选项对于开发环境和生产环境并不理想。他们是一些特定场景下需要的，例如，针对一些第三方工具。</p> <p><code>inline-source-map</code> - source map 转换为 DataUrl 后添加到 bundle 中。</p> <p><code>cheap-source-map</code> - 没有列映射(column mapping)的 source map，忽略 loader source map。</p> <p><code>inline-cheap-source-map</code> - 类似 <code>cheap-source-map</code>，但是 source map 转换为 DataUrl 后添加到 bundle 中。</p> <p><code>cheap-module-source-map</code> - 没有列映射(column mapping)的 source map，将 loader source map 简化为每行一个映射(mapping)。</p> <p><code>inline-cheap-module-source-map</code> - 类似 <code>cheap-module-source-map</code>，但是 source mapp 转换为 DataUrl 添加到 bundle 中。</p> <h3 id="production">对于生产环境 <a href="#production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>这些选项通常用于生产环境中：</p> <p><code>(none)</code>（省略 <code>devtool</code> 选项） - 不生成 source map。这是一个不错的选择。</p> <p><code>source-map</code> - 整个 source map 作为一个单独的文件生成。它为 bundle 添加了一个引用注释，以便开发工具知道在哪里可以找到它。</p> <blockquote class="warning"> <p>你应该将你的服务器配置为，不允许普通用户访问 source map 文件！</p> </blockquote> <p><code>hidden-source-map</code> - 与 <code>source-map</code> 相同，但不会为 bundle 添加引用注释。如果你只想 source map 映射那些源自错误报告的错误堆栈跟踪信息，但不想为浏览器开发工具暴露你的 source map，这个选项会很有用。</p> <blockquote class="warning"> <p>你不应将 source map 文件部署到 web 服务器。而是只将其用于错误报告工具。</p> </blockquote> <p><code>nosources-source-map</code> - 创建的 source map 不包含 <code>sourcesContent(源代码内容)</code>。它可以用来映射客户端上的堆栈跟踪，而无须暴露所有的源代码。你可以将 source map 文件部署到 web 服务器。</p> <blockquote class="warning"> <p>这仍然会暴露反编译后的文件名和结构，但它不会暴露原始代码。</p> </blockquote> <blockquote class="tip"> <p>如果默认的 webpack <code>minimizer</code> 被覆盖 (例如自定义 <code>terser-webpack-plugin</code> 选项)， 请确保将其替换配置为 <code>sourceMap: true</code> 以启用 SourceMap 支持。</p> </blockquote> '}}]);