(self.webpackChunk=self.webpackChunk||[]).push([[647],{647:function(n){n.exports='<p>首先，我们要消除一个常见的误解。webpack 是一个模块打包工具(module bundler)（例如，<a href="http://browserify.org/">Browserify</a> 或 <a href="https://brunch.io/">Brunch</a>）。而_不是一个任务执行工具(task runner)_（例如，<a href="https://www.gnu.org/software/make/">Make</a>, <a href="https://gruntjs.com/">Grunt</a> 或者 <a href="https://gulpjs.com/">Gulp</a> ）。任务执行工具用来自动化处理常见的开发任务，例如，lint(代码检测)、build(构建)、test(测试)。相比模块打包工具，任务执行工具则聚焦在偏重上层的问题上面。你仍然可以得益于这种用法：使用上层的工具，而将打包部分的问题留给 webpack。</p> <p>打包工具帮助你取得准备用于部署的 JavaScript 和 stylesheet，将它们转换为适合浏览器的可用格式。例如，可以通过 <a href="plugins/terser-webpack-plugin.htm"/*tpa=https://webpack.docschina.org/plugins/terser-webpack-plugin*/>压缩</a>、<a href="guides/code-splitting.htm"/*tpa=https://webpack.docschina.org/guides/code-splitting*/>分离 chunk</a> 和 <a href="guides/lazy-loading.htm"/*tpa=https://webpack.docschina.org/guides/lazy-loading*/>惰性加载</a> 我们的 JavaScript 来提高性能。打包是 web 开发中最重要的挑战之一，解决此问题可以消除开发过程中的大部分痛点。</p> <p>好的消息是，虽然有一些功能重叠，但是如果使用方式正确，任务运行工具和模块打包工具还是能够一起协同工作。本指南提供了关于如何将 webpack 与一些流行的任务运行工具集成在一起的高度概述。</p> <h2 id="npm-scripts">NPM Scripts <a href="#npm-scripts" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>通常 webpack 用户使用 npm <a href="https://docs.npmjs.com/misc/scripts"><code>scripts</code></a> 来作为任务执行工具。这是比较好的开始。然而跨平台支持可能是个问题，但是有几种解决方案。许多用户（但不是大多数用户）直接使用 npm <code>scripts</code> 和各种级别的 webpack 配置和工具。</p> <p>因此，虽然 webpack 核心重点是打包，但是可以通过各种扩展，将它用于任务运行工具的常见工作。集成一个单独的工具会增加复杂度，因此在开始前一定要权衡利弊。</p> <h2 id="grunt">Grunt <a href="#grunt" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>对于那些使用 Grunt 的人，我们推荐使用 <a href="https://www.npmjs.com/package/grunt-webpack"><code>grunt-webpack</code></a> package。使用 <code>grunt-webpack</code> 你可以将 webpack 或 <a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a> 作为一项任务(task)执行，访问 <a href="https://gruntjs.com/api/grunt.template">grunt template tags</a> 中的统计信息，拆分开发和生产配置等等。如果还没有安装 <code>grunt-webpack</code> 和 <code>webpack</code>，请先安装它们：</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev grunt-webpack webpack</code></pre> <p>然后，注册一个配置并加载任务：</p> <p><strong>Gruntfile.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> webpackConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack.config.js\'/*tpa=https://webpack.docschina.org/webpack.config.js*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">grunt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  grunt<span class="token punctuation">.</span><span class="token function">initConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    webpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        stats<span class="token operator">:</span> <span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      prod<span class="token operator">:</span> webpackConfig<span class="token punctuation">,</span>\n      dev<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> watch<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> webpackConfig<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  grunt<span class="token punctuation">.</span><span class="token function">loadNpmTasks</span><span class="token punctuation">(</span><span class="token string">\'grunt-webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>获取更多信息，请查看 <a href="https://github.com/webpack-contrib/grunt-webpack">仓库</a>。</p> <h2 id="gulp">Gulp <a href="#gulp" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>在 <a href="https://github.com/shama/webpack-stream"><code>webpack-stream</code></a> package（也称作 <code>gulp-webpack</code>） 的帮助下，可以相当直接地将 Gulp 与 webpack 集成。在这种情况下，不需要单独安装 <code>webpack</code>，因为它是 <code>webpack-stream</code> 直接依赖：</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-stream</code></pre> <p>只要将 <code>webpack</code> 替换为 <code>require(\'webpack-stream\')</code>，并传递一个配置：</p> <p><strong>gulpfile.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'gulp\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack-stream\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ngulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">\'default\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">\'src/entry.js\'/*tpa=https://webpack.docschina.org/src/entry.js*/</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">webpack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Any configuration options...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">\'dist/\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>获取更多信息，请查看 <a href="https://github.com/shama/webpack-stream">仓库</a>。</p> <h2 id="mocha">Mocha <a href="#mocha" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/zinserjan/mocha-webpack"><code>mocha-webpack</code></a> 可以将 Mocha 与 webpack 完全集成。这个仓库提供了很多关于其优势和劣势的细节，基本上 <code>mocha-webpack</code> 只是一个简单封装，提供与 Mocha 几乎相同的 CLI，并提供各种 webpack 功能，例如改进了 watch mode 和改进了路径分析。这里是一个如何安装并使用它来运行测试套件的示例（在 <code>./test</code> 中找到）：</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack mocha mocha-webpack\nmocha-webpack <span class="token string">\'test/**/*.js\'</span></code></pre> <p>获取更多信息，请查看 <a href="https://github.com/zinserjan/mocha-webpack">仓库</a>。</p> <h2 id="karma">Karma <a href="#karma" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/karma-webpack"><code>karma-webpack</code></a> package 允许你使用 webpack 预处理 <a href="https://karma-runner.github.io/1.0/index.html">Karma</a> 中的文件。它也可以使用 <a href="https://github.com/webpack/webpack-dev-middleware"><code>webpack-dev-middleware</code></a>，并允许传递两者的配置。下面是一个简单的示例：</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack karma karma-webpack</code></pre> <p><strong>karma.conf.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  config<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    files<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">\'test/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">\'test/**/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    preprocessors<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">\'test/*_test.js\'</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">\'webpack\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string">\'test/**/*_test.js\'</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">\'webpack\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    webpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Any custom webpack configuration...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    webpackMiddleware<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Any custom webpack-dev-middleware configuration...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>获取更多信息，请查看 <a href="https://github.com/webpack-contrib/karma-webpack">仓库</a>。</p> '}}]);