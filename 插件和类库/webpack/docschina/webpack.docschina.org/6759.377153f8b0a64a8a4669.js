(self.webpackChunk=self.webpackChunk||[]).push([[6759],{6759:function(n){n.exports='<p><a href="https://npmjs.com/package/less-loader"><img src="https://img.shields.io/npm/v/less-loader.svg" alt="npm"></a> <a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/less-loader.svg" alt="node"></a> <a href="https://david-dm.org/webpack-contrib/less-loader"><img src="https://david-dm.org/webpack-contrib/less-loader.svg" alt="deps"></a> <a href="https://github.com/webpack-contrib/less-loader/actions"><img src="https://github.com/webpack-contrib/less-loader/workflows/less-loader/badge.svg" alt="tests"></a> <a href="https://codecov.io/gh/webpack-contrib/less-loader"><img src="https://codecov.io/gh/webpack-contrib/less-loader/branch/master/graph/badge.svg" alt="cover"></a> <a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a> <a href="https://packagephobia.now.sh/result?p=less-loader"><img src="https://packagephobia.now.sh/badge?p=less-loader" alt="size"></a></p> <p>webpack 将 Less 编译为 CSS 的 loader。</p> <h2 id="getting-started">快速开始 <a href="#getting-started" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>首先，你需要先安装 <code>less</code> 和 <code>less-loader</code>：</p> <pre><code class="hljs language-console">$ npm install less less-loader --save-dev\n</code></pre> <p>然后将该 loader 添加到 <code>webpack</code> 的配置中去，例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token comment">// 将 Less 文件编译为 CSS 文件</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>接着使用你习惯的方式运行 <code>webpack</code>。</p> <h2 id="options">可选项 <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <table> <thead> <tr> <th align="center">名称</th> <th align="center">类型</th> <th align="center">默认值</th> <th align="left">描述</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="名称"><span><strong><a href="#lessoptions"><code>lessOptions</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Object|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>{ relativeUrls: true }</code></span></td> <td align="left" data-th="描述"><span>Less 的可选项。</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#additionaldata"><code>additionalData</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{String|Function}</code></span></td> <td align="center" data-th="默认值"><span><code>undefined</code></span></td> <td align="left" data-th="描述"><span>在入口文件起始或末尾添加 Less 代码。</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#sourcemap"><code>sourceMap</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>compiler.devtool</code></span></td> <td align="left" data-th="描述"><span>是否生成 source map。</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#implementation"><code>implementation</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Object}</code></span></td> <td align="center" data-th="默认值"><span><code>less</code></span></td> <td align="left" data-th="描述"><span>配置 Less 使用的实现库</span></td> </tr> </tbody> </table> <h3 id="lessoptions"><code>lessOptions</code> <a href="#lessoptions" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型: <code>Object|Function</code> 默认值: <code>{ relativeUrls: true }</code></p> <p>通过 <code>lessOptions</code> 属性，你可以设置 <a href="configuration/module/index.htm#ruleoptions--rulequery"/*tpa=https://webpack.docschina.org/configuration/module/#ruleoptions--rulequery*/>loader options</a> 中的任意特定的选项值给 <code>less-loader</code>。所有可用的选项值请参看 <a href="http://lesscss.org/usage/#command-line-usage-options">Less 命令行可选参数文档</a>。由于我们是通过编程的方式将这些选项传递给 Less，因此您需要将破折号（dash-case）转换为驼峰值（camelCase）后传递它们。</p> <h4 id="object"><code>Object</code> <a href="#object" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>使用对象（Object）的形式传递 options 给 Less。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              lessOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                strictMath<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="function"><code>Function</code> <a href="#function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>允许根据 loader 的 context 来设置 options，再传递给 Less。</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">lessOptions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 更多可用的属性见 https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"https://webpack.docschina.org/styles/foo.less"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                    paths<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"absolute/path/c"</span><span class="token punctuation">,</span> <span class="token string">"absolute/path/d"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  paths<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"absolute/path/a"</span><span class="token punctuation">,</span> <span class="token string">"absolute/path/b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="additionaldata"><code>additionalData</code> <a href="#additionaldata" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型: <code>String|Function</code> 默认值: <code>undefined</code></p> <p>在实际入口文件的起始位置添加 <code>Less</code> 代码。 这种情况下，<code>less-loader</code> 只会<strong>追加</strong>并不会覆盖文件内容。</p> <p>当你的 Less 变量依赖环境变量时这个属性将非常有用：</p> <blockquote> <p>ℹ 由于你注入了代码，因此它将破坏入口文件的源映射关系。通常有比这更简单的解决方案，例如多个 Less 入口文件。</p> </blockquote> <h4 id="string"><code>String</code> <a href="#string" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@env: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="function"><code>Function</code> <a href="#function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <h5 id="Sync">Sync<a href="#Sync" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">additionalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 更多可用的属性见 https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"https://webpack.docschina.org/styles/foo.less"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">"@value: 100px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">"@value: 200px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h5 id="Async">Async<a href="#Async" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h5> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">additionalData</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"https://webpack.docschina.org/styles/foo.less"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">"@value: 100px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">"@value: 200px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="sourcemap"><code>sourceMap</code> <a href="#sourcemap" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型: <code>Boolean</code> 默认值: 取决于 <code>compiler.devtool</code> 的值</p> <p>默认生成的 source map 取决于 <code>compiler.devtool</code> 的值。除了值等于 <code>eval</code> 和 <code>false</code> 外，其他值都能生成 source map</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="webpackimporter"><code>webpackImporter</code> <a href="#webpackimporter" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean</code> 默认值：<code>true</code></p> <p>启用/禁用 webpack 默认的 importer。</p> <p>在某些情况下，这样做可以提高性能，但是请慎用，因为可能会使得 aliases 和以 <code>~</code> 开头的 <code>@import</code> 规则失效。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              webpackImporter<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="examples">示例 <a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="normal-usage">常规用法 <a href="#normal-usage" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>将 <code>less-loader</code>、<a href="loaders/css-loader/index.htm"/*tpa=https://webpack.docschina.org/loaders/css-loader/*/><code>css-loader</code></a> 和 <a href="loaders/style-loader/index.htm"/*tpa=https://webpack.docschina.org/loaders/style-loader/*/><code>style-loader</code></a> 串联起来使用可立即将所有样式应用于 DOM。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token comment">// 从 JS 中创建样式节点</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token comment">// 转化 CSS 为 CommonJS</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token comment">// 编译 Less 为 CSS</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>不幸的是，Less 并没有将所有选项 1 对 1 映射为 camelCase（驼峰值）。如有疑问，请[检查执行文件]（https://github.com/less/less.js/blob/3.x/bin/lessc）并搜索破折号选项。</p> <h3 id="source-maps">Source maps <a href="#source-maps" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>为了生成 CSS 的 source map, 你需要在 loader 的可选项中设置 <code>sourceMap</code> 属性。如果没设置的话 loader 将会继承你 webpack 中为生成 source map 设置的属性值 <code>devtool</code>。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devtool<span class="token operator">:</span> <span class="token string">"source-map"</span><span class="token punctuation">,</span> <span class="token comment">// 任何类似于 "source-map" 的  devtool 值都可以</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>如果你想在 Chrome 中修改原始的 Less 文件，可以参考<a href="https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0">这篇不错的博客</a>。这篇博客虽然写的 Sass，但也适合于 Less。</p> <h3 id="in-production">生产环境 <a href="#in-production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>在生产环境中推荐使用 <a href="plugins/mini-css-extract-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/mini-css-extract-plugin/*/>MiniCssExtractPlugin</a> 来提取样式表到专门的文件中，这样你的样式就不需要依赖 JavaScript。</p> <h3 id="imports">导入 <a href="#imports" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>从 <code>less-loader</code> v4 版本起，你有两种解析器可用，Less 内置解析器和 webpack 解析器。默认情况使用 webpack 解析器。</p> <h4 id="webpack-resolver">webpack 解析器 <a href="#webpack-resolver" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>webpack 提供了一种 <a href="configuration/resolve/index.htm"/*tpa=https://webpack.docschina.org/configuration/resolve/*/>解析文件的高级机制</a>。<code>less-loader</code> 作为 Less 的插件，该插件将所有的查询结果传递给 webpack 解析器，因此你可以从 <code>node_modules</code> 中导入 Less 模块，只需要在它们前面加上 <code>~</code> 符号告诉 webpack 从 <a href="configuration/resolve/index.htm#resolvemodules"/*tpa=https://webpack.docschina.org/configuration/resolve/#resolvemodules*/><code>modules</code></a> 中去查找。</p> <pre><code class="hljs language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"~bootstrap/less/bootstrap"</span><span class="token punctuation">;</span></span></code></pre> <p>在其前面加上 <code>〜</code> 很关键，因为 <code>〜/</code> 会解析到根目录。webpack 需要区分 <code>bootstrap</code> 和 <code>〜bootstrap</code>，因为 CSS 和 Less 文件没有用于导入相对路径文件的特殊语法。写 <code>@import“ file”</code> 等同于 <code>@import“ ./file”;</code></p> <h4 id="less-resolver">Less 解析器 <a href="#less-resolver" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>如果指定 <code>paths</code> 选项，将从指定的 <code>paths</code> 中搜索模块，这是 Less 的默认行为。<code>paths</code> 应该是具有绝对路径的数组。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              lessOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                paths<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"node_modules"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="plugins">插件 <a href="#plugins" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>想要使用 <a href="http://lesscss.org/usage/#plugins">插件</a>，只需要简单设置下 <code>plugins</code> 选项即可， 具体配置如下：</p> <pre><code class="hljs language-js"><span class="token comment">// webpack.config.js</span>\n<span class="token keyword">const</span> CleanCSSPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'less-plugin-clean-css\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token operator">:</span> <span class="token string">\'less-loader\'</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        lessOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token keyword">new</span> <span class="token class-name">CleanCSSPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> advanced<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <blockquote> <p>ℹ️ 使用 <code>less.webpackLoaderContext</code> 属性可以访问自定义插件中的 <a href="api/loaders/index.htm#the-loader-context"/*tpa=https://webpack.docschina.org/api/loaders/#the-loader-context*/>loader context</a>。</p> </blockquote> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">install</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">less<span class="token punctuation">,</span> pluginManager<span class="token punctuation">,</span> functions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    functions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"pi"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Loader context is available in `less.webpackLoaderContext`</span>\n\n      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="extracting-style-sheets">提取样式 <a href="#extracting-style-sheets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>通过 webpack 打包 CSS 有很多好处，比如给引用图片和字体文件路径添加 hash, 在开发环境可以 <a href="concepts/hot-module-replacement/index.htm"/*tpa=https://webpack.docschina.org/concepts/hot-module-replacement/*/>模块热替换</a>。另一方面，在生产环境，根据 JS 来控制应用样式表不是一个好的方式，可能会导致延迟渲染，甚至可能会出现<a href="https://en.wikipedia.org/wiki/Flash_of_unstyled_content">闪烁现象</a>。因此，在你最终的生产环境中将它们拆分成单独的文件来存放通常是比较好的选择。</p> <p>有两种从 bundle 中提取样式表的方式：</p> <ul> <li><a href="https://github.com/peerigon/extract-loader"><code>extract-loader</code></a> （简单，但得专门指定 <code>css-loader</code> 的 output）</li> <li><a href="plugins/mini-css-extract-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/mini-css-extract-plugin/*/>MiniCssExtractPlugin</a> （较复杂，但适用于所有的场景）</li> </ul> <h3 id="css-modules-gotcha">CSS modules 陷阱 <a href="#css-modules-gotcha" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>Less 和 <a href="https://github.com/css-modules/css-modules">CSS modules</a> 有一个已知的问题，关于 <code>url（...）</code> 语句中的相对文件路径，<a href="https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335">看下这个问题的解释</a>。</p> <h2 id="contributing">贡献 <a href="#contributing" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你还没有看过我们的贡献者指南请先花点时间看一下。</p> <p><a href="https://github.com/webpack-contrib/less-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p> <h2 id="license">许可 <a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/less-loader/blob/master/LICENSE">MIT</a></p> '}}]);