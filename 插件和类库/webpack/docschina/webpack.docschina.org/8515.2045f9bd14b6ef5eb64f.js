(self.webpackChunk=self.webpackChunk||[]).push([[8515],{8515:function(n){n.exports='<p><a href="https://npmjs.com/package/html-loader"><img src="https://img.shields.io/npm/v/html-loader.svg" alt="npm"></a> <a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/html-loader.svg" alt="node"></a> <a href="https://david-dm.org/webpack-contrib/html-loader"><img src="https://david-dm.org/webpack-contrib/html-loader.svg" alt="deps"></a> <a href="https://github.com/webpack-contrib/html-loader/actions"><img src="https://github.com/webpack-contrib/html-loader/workflows/html-loader/badge.svg" alt="tests"></a> <a href="https://codecov.io/gh/webpack-contrib/html-loader"><img src="https://codecov.io/gh/webpack-contrib/html-loader/branch/master/graph/badge.svg" alt="coverage"></a> <a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a> <a href="https://packagephobia.now.sh/result?p=html-loader"><img src="https://packagephobia.now.sh/badge?p=html-loader" alt="size"></a></p> <p>将 HTML 导出为字符串。当编译器需要时，将压缩 HTML 字符串。</p> <h2 id="getting-started">入门 <a href="#getting-started" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>首先，你需要安装 <code>html-loader</code> ：</p> <pre><code class="hljs language-console">npm install --save-dev html-loader\n</code></pre> <p>然后将插件添加到你的 <code>webpack</code> 配置中。例如：</p> <p><strong>file.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">import</span> html <span class="token keyword">from</span> <span class="token string">\'https://webpack.docschina.org/file.html\'</span><span class="token punctuation">;</span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="options">选项 <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <table> <thead> <tr> <th align="center">名称</th> <th align="center">类型</th> <th align="center">默认值</th> <th align="left">描述</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="名称"><span><strong><a href="#attributes"><code>attributes</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean|Object}</code></span></td> <td align="center" data-th="默认值"><span><code>true</code></span></td> <td align="left" data-th="描述"><span>启用/禁用 attributes 处理</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#preprocessor"><code>preprocessor</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Function}</code></span></td> <td align="center" data-th="默认值"><span><code>undefined</code></span></td> <td align="left" data-th="描述"><span>允许在处理前对内容进行预处理</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#minimize"><code>minimize</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean|Object}</code></span></td> <td align="center" data-th="默认值"><span>在生产模式下为 <code>true</code>，其他情况为 <code>false</code></span></td> <td align="left" data-th="描述"><span>告知 <code>html-loader</code> 压缩 HTML</span></td> </tr> <tr> <td align="center" data-th="名称"><span><strong><a href="#esmodule"><code>esModule</code></a></strong></span></td> <td align="center" data-th="类型"><span><code>{Boolean}</code></span></td> <td align="center" data-th="默认值"><span><code>false</code></span></td> <td align="left" data-th="描述"><span>使用 ES modules 语法</span></td> </tr> </tbody> </table> <h3 id="attributes"><code>attributes</code> <a href="#attributes" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型： <code>Boolean|Object</code> 默认值： <code>true</code></p> <p>默认情况下，每个可加载属性（例如 - <code>&#x3C;img src="image.png"/*tpa=https://webpack.docschina.org/image.png*/></code> ）都将被导入（ <code>const img = require (\'image.png\'/*tpa=https://webpack.docschina.org/image.png*/)</code> 或 <code>import img from "image.png"/*tpa=https://webpack.docschina.org/image.png*/"</code> ）。 你可能需要为配置中的图片指定 loader（推荐使用 <code>file-loader</code> 或 <code>url-loader</code> ）。</p> <p>支持的标签和属性：</p> <ul> <li><code>audio</code> 标签的 <code>src</code> 属性</li> <li><code>embed</code> 标签的 <code>src</code> 属性</li> <li><code>img</code> 标签的 <code>src</code> 属性</li> <li><code>img</code> 标签的 <code>srcset</code> 属性</li> <li><code>input</code> 标签的 <code>src</code> 属性</li> <li><code>link</code> 标记的 <code>href</code> 属性（仅适用于样式表）</li> <li><code>object</code> 标签的 <code>data</code> 属性</li> <li><code>script</code> 标签的 <code>src</code> 属性</li> <li><code>source</code> 标签的 <code>src</code> 属性</li> <li><code>source</code> 标签的 <code>srcset</code> 属性</li> <li><code>track</code> 标签的 <code>src</code> 属性</li> <li><code>video</code> 标签的 <code>poster</code> 属性</li> <li><code>video</code> 标签的 <code>src</code> 属性</li> <li><code>image</code> 标签的 <code>xlink:href</code> 属性</li> <li><code>image</code> 标签的 <code>href</code> 属性</li> <li><code>use</code> 标签的 <code>xlink:href</code> 属性</li> <li><code>use</code> 标签的 <code>href</code> 属性</li> <li>当 <code>rel</code> 属性值为 <code>stylesheet</code>，<code>icon</code>，<code>shortcut icon</code>，<code>mask-icon</code>，<code>apple-touch-icon</code>，<code>apple-touch-icon-precomposed</code> 或 <code>apple-touch-startup-image</code> 时，<code>link</code> 标签的 <code>href</code> 属性</li> <li>当 <code>name</code> 属性为 <code>msapplication-tileimage</code>，<code>msapplication-square70x70logo</code>，<code>msapplication-square150x150logo</code>，<code>msapplication-wide310x150logo</code>，<code>msapplication-square310x310logo</code>，<code>msapplication-config</code> 时，支持 <code>meta</code> 标签的 <code>content</code> 属性。或当 <code>property</code> 属性为 <code>og:image</code>，<code>og:image:url</code>，<code>og:image:secure_url</code>，<code>og:audio</code>，<code>og:audio:secure_url</code>，<code>og:video</code>，<code>og:video:secure_url</code>，<code>vk:image</code> 时。</li> </ul> <h4 id="boolean"><code>Boolean</code> <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>当设置为 <code>true</code> 时，则启用所有默认元素和属性的处理，而 <code>false</code> 则禁用所有属性的处理。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// Disables attributes processing</span>\n          attributes<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="object"><code>Object</code> <a href="#object" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>你可以配置要处理的标签和属性，来过滤它们，过滤 URL 并处理以 <code>/</code> 开头的资源地址。</p> <p>例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n            list<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token comment">// All default supported tags and attributes</span>\n              <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                tag<span class="token operator">:</span> <span class="token string">\'img\'</span><span class="token punctuation">,</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'data-src\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                tag<span class="token operator">:</span> <span class="token string">\'img\'</span><span class="token punctuation">,</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'data-srcset\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'srcset\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">urlFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">attribute<span class="token punctuation">,</span> value<span class="token punctuation">,</span> resourcePath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token comment">// The `attribute` argument contains a name of the HTML attribute.</span>\n              <span class="token comment">// The `value` argument contains a value of the HTML attribute.</span>\n              <span class="token comment">// The `resourcePath` argument contains a path to the loaded HTML file.</span>\n\n              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">example\\.pdf$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            root<span class="token operator">:</span> <span class="token string">\'.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="list"><code>list</code> <a href="#list" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Array</code> 默认值：<a href="#attributes">支持的标签和属性列表</a></p> <p>允许设置要处理的标签和属性以及处理方式，以及过滤其中一些标签和属性的能力。</p> <p>使用 <code>...</code> 语法可以使用所有<a href="#attributes">默认支持的标签和属性</a>。</p> <p>例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n            list<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token comment">// All default supported tags and attributes</span>\n              <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                tag<span class="token operator">:</span> <span class="token string">\'img\'</span><span class="token punctuation">,</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'data-src\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                tag<span class="token operator">:</span> <span class="token string">\'img\'</span><span class="token punctuation">,</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'data-srcset\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'srcset\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token comment">// Tag name</span>\n                tag<span class="token operator">:</span> <span class="token string">\'link\'</span><span class="token punctuation">,</span>\n                <span class="token comment">// Attribute name</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'href\'</span><span class="token punctuation">,</span>\n                <span class="token comment">// Type of processing, can be `src` or `scrset`</span>\n                type<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n                <span class="token comment">// Allow to filter some attributes</span>\n                <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> attribute<span class="token punctuation">,</span> attributes<span class="token punctuation">,</span> resourcePath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token comment">// The `tag` argument contains a name of the HTML tag.</span>\n                  <span class="token comment">// The `attribute` argument contains a name of the HTML attribute.</span>\n                  <span class="token comment">// The `attributes` argument contains all attributes of the tag.</span>\n                  <span class="token comment">// The `resourcePath` argument contains a path to the loaded HTML file.</span>\n\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">my-html\\.html$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span>\n\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">stylesheet</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>attributes<span class="token punctuation">.</span>rel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span>\n\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span>\n                    attributes<span class="token punctuation">.</span>type <span class="token operator">&#x26;&#x26;</span>\n                    attributes<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">\'text/css\'</span>\n                  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span>\n\n                  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>如果未指定标签名称，它将处理所有标签。</p> <blockquote> <p>你可以使用自定义过滤器指定要处理的 html 元素。</p> </blockquote> <p>例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n            list<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                <span class="token comment">// Attribute name</span>\n                attribute<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n                <span class="token comment">// Type of processing, can be `src` or `scrset`</span>\n                type<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n                <span class="token comment">// Allow to filter some attributes (optional)</span>\n                <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> attribute<span class="token punctuation">,</span> attributes<span class="token punctuation">,</span> resourcePath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token comment">// The `tag` argument contains a name of the HTML tag.</span>\n                  <span class="token comment">// The `attribute` argument contains a name of the HTML attribute.</span>\n                  <span class="token comment">// The `attributes` argument contains all attributes of the tag.</span>\n                  <span class="token comment">// The `resourcePath` argument contains a path to the loaded HTML file.</span>\n\n                  <span class="token comment">// choose all HTML tags except img tag</span>\n                  <span class="token keyword">return</span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">\'img\'</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="urlfilter"><code>urlFilter</code> <a href="#urlfilter" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>Function</code> 默认值： <code>undefined</code></p> <p>允许配置要过滤的 url。所有过滤的 url 都参与解析（会保持原样）。 默认情况下，所有非请求资源类型的值（例如 <code>&#x3C;img src="javascript:void (0)"></code> ）都不处理。</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function-variable function">urlFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">attribute<span class="token punctuation">,</span> value<span class="token punctuation">,</span> resourcePath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token comment">// The `attribute` argument contains a name of the HTML attribute.</span>\n              <span class="token comment">// The `value` argument contains a value of the HTML attribute.</span>\n              <span class="token comment">// The `resourcePath` argument contains a path to the loaded HTML file.</span>\n\n              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">example\\.pdf$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n\n              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="root"><code>root</code> <a href="#root" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>类型：<code>String</code> 默认值： <code>undefined</code></p> <p>对于 <code>/</code> 开头的 url，默认不进行转换。 但是，如果设置了 <code>root</code> 查询参数，它将被放在 URL 之前进行转换。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          attributes<span class="token operator">:</span> <span class="token punctuation">{</span>\n            root<span class="token operator">:</span> <span class="token string">\'.\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="preprocessor"><code>preprocessor</code> <a href="#preprocessor" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Function</code> 默认值：<code>undefined</code></p> <p>允许在处理之前对内容进行预处理。</p> <blockquote> <p>⚠你应该始终返回有效的 HTML</p> </blockquote> <p><strong>file.hbs</strong></p> <pre><code class="hljs language-hbs">&#x3C;div>\n  &#x3C;p>{{firstname}} {{lastname}}&#x3C;/p>\n  &#x3C;img src="image.png"/*tpa=https://webpack.docschina.org/image.png*/ alt="alt" />\n&#x3C;div>\n</code></pre> <h4 id="function"><code>Function</code> <a href="#function" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>你可以将 <code>preprocessor</code> 选项设置为 <code>Function</code> 实例。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> Handlebars <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'handlebars\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.hbs$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">preprocessor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n              result <span class="token operator">=</span> Handlebars<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                firstname<span class="token operator">:</span> <span class="token string">\'Value\'</span><span class="token punctuation">,</span>\n                lastname<span class="token operator">:</span> <span class="token string">\'OtherValue\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">return</span> content<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>你还可以将 <code>preprocessor</code> 选项设置为异步函数实例。</p> <p>例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> Handlebars <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'handlebars\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.hbs$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">preprocessor</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n              result <span class="token operator">=</span> <span class="token keyword">await</span> Handlebars<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                firstname<span class="token operator">:</span> <span class="token string">\'Value\'</span><span class="token punctuation">,</span>\n                lastname<span class="token operator">:</span> <span class="token string">\'OtherValue\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">await</span> loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">return</span> content<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="minimize"><code>minimize</code> <a href="#minimize" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean|Object</code> 默认值：在生产模式下为 <code>true</code> ，否则为 <code>false</code></p> <p>告诉 <code>html-loader</code> 编译时需要压缩 HTML 字符串。</p> <h4 id="boolean"><code>Boolean</code> <a href="#boolean" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>默认情况下，启用压缩的规则如下：</p> <pre><code class="hljs language-js"><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  caseSensitive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  conservativeCollapse<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  keepClosingSlash<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  removeRedundantAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  removeScriptTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  removeStyleLinkTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          minimize<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="object"><code>Object</code> <a href="#object" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><strong>webpack.config.js</strong></p> <p>关于可用选项的更多信息，请参阅 <a href="https://github.com/DanielRuf/html-minifier-terser">html-minifier-terser</a> 文档。</p> <p>可以在 <code>webpack.conf.js</code> 中使用以下选项来禁用规则</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          minimize<span class="token operator">:</span> <span class="token punctuation">{</span>\n            removeComments<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            collapseWhitespace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="esmodule"><code>esModule</code> <a href="#esmodule" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>类型：<code>Boolean</code> 值默认值：<code>false</code></p> <p>默认情况下， <code>html-loader</code> 生成使用 CommonJS 模块语法的 JS 模块。 在某些情况下，使用 ES 模块会更好，例如在进行<a href="plugins/module-concatenation-plugin/index.htm"/*tpa=https://webpack.docschina.org/plugins/module-concatenation-plugin/*/>模块合并</a>和 <a href="guides/tree-shaking/index.htm"/*tpa=https://webpack.docschina.org/guides/tree-shaking/*/>tree shaking</a> 时。</p> <p>你可以使用以下方法启用 ES 模块语法：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          esModule<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="examples">示例 <a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="cdn">CDN <a href="#cdn" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> loader<span class="token operator">:</span> <span class="token string">\'file-loader\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.png$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> loader<span class="token operator">:</span> <span class="token string">\'url-loader\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    publicPath<span class="token operator">:</span> <span class="token string">\'http://cdn.example.com/[hash]/\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><strong>file.html</strong></p> <pre><code class="hljs language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image2x.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre> <p><strong>index.js</strong></p> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'https://webpack.docschina.org/html-loader!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="../cdn.example.com/49eba9f/a992ca.jpg"/*tpa=http://cdn.example.com/49eba9f/a992ca.jpg*/ data-src="image2x.png"/*tpa=https://webpack.docschina.org/image2x.png*/>\'</span></code></pre> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'html-loader?{"attributes":{"list":[{"tag":"img","attribute":"data-src","type":"src"}]}}!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="image.jpg"/*tpa=https://webpack.docschina.org/image.jpg*/ data-src="data:image/png;base64,..." >\'</span></code></pre> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'html-loader?{"attributes":{"list":[{"tag":"img","attribute":"src","type":"src"},{"tag":"img","attribute":"data-src","type":"src"}]}}!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="../cdn.example.com/49eba9f/a992ca.jpg"/*tpa=http://cdn.example.com/49eba9f/a992ca.jpg*/ data-src="data:image/png;base64,..." >\'</span></code></pre> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'html-loader?-attributes!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="image.jpg"/*tpa=https://webpack.docschina.org/image.jpg*/  data-src="image2x.png"/*tpa=https://webpack.docschina.org/image2x.png*/ >\'</span></code></pre> <blockquote> <p>：warning： <code>-attributes</code> 设置 <code>attributes: false</code> 。</p> </blockquote> <h3 id="process-script-and-link-tags">处理 <code>script</code> 和 <code>link</code> 标签 <a href="#process-script-and-link-tags" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><strong>script.file.js</strong></p> <pre><code class="hljs language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>style.file.css</strong></p> <pre><code class="hljs language-css"><span class="token selector">a</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre> <p><strong>file.html</strong></p> <pre><code class="hljs language-html"><span class="token doctype"><span class="token punctuation">&#x3C;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>title</span><span class="token punctuation">></span></span>Title of the document<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>title</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./style.file.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>body</span><span class="token punctuation">></span></span>\n    Content of the document......\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./script.file.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>script</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>html</span><span class="token punctuation">></span></span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'file-loader?name=[name].[ext]\'</span><span class="token punctuation">,</span> <span class="token string">\'extract-loader\'</span><span class="token punctuation">,</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.file.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.file.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.file.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.file.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'file-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="root-relative-urls">“相对根” 的 URL <a href="#root-relative-urls" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>与 CDN 示例中的配置相同：</p> <p><strong>file.html</strong></p> <pre><code class="hljs language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/image.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre> <p><strong>scripts.js</strong></p> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'https://webpack.docschina.org/html-loader!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="image.jpg"/*tpa=https://webpack.docschina.org/image.jpg*/>\'</span></code></pre> <p><strong>other-scripts.js</strong></p> <pre><code class="hljs language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'html-loader?{"attributes":{"root":"."}}!./file.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// => \'&#x3C;img src="../cdn.example.com/49eba9f/a992ca.jpg"/*tpa=http://cdn.example.com/49eba9f/a992ca.jpg*/>\'</span></code></pre> <h3 id="templating">模板 <a href="#templating" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你可以使用任何模板系统。以下是 <a href="https://handlebarsjs.com/">handlebars</a> 的示例。</p> <p><strong>file.hbs</strong></p> <pre><code class="hljs language-hbs">&#x3C;div>\n  &#x3C;p>{{firstname}} {{lastname}}&#x3C;/p>\n  &#x3C;img src="image.png"/*tpa=https://webpack.docschina.org/image.png*/ alt="alt" />\n&#x3C;div>\n</code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> Handlebars <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'handlebars\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.hbs$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">preprocessor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n              result <span class="token operator">=</span> Handlebars<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                firstname<span class="token operator">:</span> <span class="token string">\'Value\'</span><span class="token punctuation">,</span>\n                lastname<span class="token operator">:</span> <span class="token string">\'OtherValue\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">return</span> content<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="posthtml">PostHTML <a href="#posthtml" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>你可以使用 <a href="https://github.com/posthtml/posthtml">PostHTML</a> 而无需任何其他加载程序。</p> <p><strong>file.html</strong></p> <pre><code class="hljs language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> posthtml <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'posthtml\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> posthtmlWebp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'posthtml-webp\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.hbs$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">preprocessor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> result<span class="token punctuation">;</span>\n\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n              result <span class="token operator">=</span> <span class="token function">posthtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>plugin<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token punctuation">{</span> sync<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              loaderContext<span class="token punctuation">.</span><span class="token function">emitError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">return</span> content<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> result<span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="export-into-html-files">导出为 HTML 文件 <a href="#export-into-html-files" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>一种非常常见的情况是将 HTML 导出到自己的 <em>.html</em> 文件中， 以直接使用，而非注入到 javascript。 可以使用以下 3 种 loader 来实现：</p> <ul> <li><a href="loaders/file-loader/index.htm"/*tpa=https://webpack.docschina.org/loaders/file-loader/*/>file-loader</a></li> <li><a href="https://github.com/peerigon/extract-loader">extract-loader</a></li> <li>html-loader</li> </ul> <p>html-loader 将解析 URL，同时引入图片以及你需要的所有内容。 extract-loader 会将 javascript 解析为正确的 html 文件， 然后确保图片被引入且路径正确， file-loader 会为你生成 <em>.html</em> 文件。例如：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.html$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'file-loader?name=[name].[ext]\'</span><span class="token punctuation">,</span> <span class="token string">\'extract-loader\'</span><span class="token punctuation">,</span> <span class="token string">\'html-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="contributing">贡献 <a href="#contributing" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你还没有阅读，请花一点时间阅读我们的贡献指南。</p> <p><a href="https://github.com/webpack-contrib/html-loader/blob/master/.github/CONTRIBUTING.md">贡献</a></p> <h2 id="license">许可证 <a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/html-loader/blob/master/LICENSE">MIT</a></p> '}}]);