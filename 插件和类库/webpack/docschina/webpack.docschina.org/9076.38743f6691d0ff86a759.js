(self.webpackChunk=self.webpackChunk||[]).push([[9076],{9076:function(n){n.exports='<p>提供 <code>mode</code> 配置选项，告知 webpack 使用相应模式的内置优化。</p> <p><code>string = \'production\': \'none\' | \'development\' | \'production\'</code></p> <h2 id="usage">用法 <a href="#usage" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>只需在配置对象中提供 <code>mode</code> 选项：</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> <span class="token string">\'development\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>或者从 <a href="api/cli/index.htm"/*tpa=https://webpack.docschina.org/api/cli/*/>CLI</a> 参数中传递：</p> <pre><code class="hljs language-bash">webpack --mode<span class="token operator">=</span>development</code></pre> <p>支持以下字符串值：</p> <table> <thead> <tr> <th>选项</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td data-th="选项"><span><code>development</code></span></td> <td data-th="描述"><span>会将 <code>DefinePlugin</code> 中 <code>process.env.NODE_ENV</code> 的值设置为 <code>development</code>. 为模块和 chunk 启用有效的名。</span></td> </tr> <tr> <td data-th="选项"><span><code>production</code></span></td> <td data-th="描述"><span>会将 <code>DefinePlugin</code> 中 <code>process.env.NODE_ENV</code> 的值设置为 <code>production</code>。为模块和 chunk 启用确定性的混淆名称，<code>FlagDependencyUsagePlugin</code>，<code>FlagIncludedChunksPlugin</code>，<code>ModuleConcatenationPlugin</code>，<code>NoEmitOnErrorsPlugin</code> 和 <code>TerserPlugin</code> 。</span></td> </tr> <tr> <td data-th="选项"><span><code>none</code></span></td> <td data-th="描述"><span>不使用任何默认优化选项</span></td> </tr> </tbody> </table> <p>如果没有设置，webpack 会给 <code>mode</code> 的默认值设置为 <code>production</code>。</p> <blockquote class="tip"> <p>请注意，设置 <code>NODE_ENV</code> 并不会自动地设置 <code>mode</code>。</p> </blockquote> <h3 id="mode-development">Mode: development <a href="#mode-development" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.development.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> mode: \'development\'\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> devtool: \'eval\',\n</span><span class="token prefix deleted">-</span><span class="token line"> cache: true,\n</span><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">   hints: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> output: {\n</span><span class="token prefix deleted">-</span><span class="token line">   pathinfo: true\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   moduleIds: \'named\',\n</span><span class="token prefix deleted">-</span><span class="token line">   chunkIds: \'named\',\n</span><span class="token prefix deleted">-</span><span class="token line">   mangleExports: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   nodeEnv: \'development\',\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: false,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 10000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   removeAvailableModules: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: [\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.DefinePlugin({ "process.env.NODE_ENV": JSON.stringify("development") }),\n</span><span class="token prefix deleted">-</span><span class="token line"> ]\n</span></span>}</code></pre> <h3 id="mode-production">Mode: production <a href="#mode-production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.production.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mode: \'production\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">   hints: \'warning\'\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> output: {\n</span><span class="token prefix deleted">-</span><span class="token line">   pathinfo: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   moduleIds: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   chunkIds: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   mangleExports: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   nodeEnv: \'production\',\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: true,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 30000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: 5,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: 3,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: true,\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: [\n</span><span class="token prefix deleted">-</span><span class="token line">   new TerserPlugin(/* ... */),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.DefinePlugin({ "process.env.NODE_ENV": JSON.stringify("production") }),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.optimize.ModuleConcatenationPlugin(),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.NoEmitOnErrorsPlugin()\n</span><span class="token prefix deleted">-</span><span class="token line"> ]\n</span></span>}</code></pre> <h3 id="mode-none">Mode: none <a href="#mode-none" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.custom.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> mode: \'none\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">  hints: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: false,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 10000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: false,\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: []\n</span></span>}</code></pre> <p>如果要根据 <em>webpack.config.js</em> 中的 <strong>mode</strong> 变量更改打包行为，则必须将配置导出为函数，而不是导出对象：</p> <pre><code class="hljs language-javascript"><span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">\'app.js\'/*tpa=https://webpack.docschina.org/app.js*/</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">env<span class="token punctuation">,</span> argv</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">.</span>devtool <span class="token operator">=</span> <span class="token string">\'source-map\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'production\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> config<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);