(self.webpackChunk=self.webpackChunk||[]).push([[4874],{4874:function(n){n.exports='<p>Adds a banner to the top of each generated chunk.</p> <pre><code class="hljs language-javascript"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span>banner<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// or</span>\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2 id="options">Options <a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  banner<span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">function</span><span class="token punctuation">,</span> <span class="token comment">// the banner as string or function, it will be wrapped in a comment</span>\n  raw<span class="token operator">:</span> boolean<span class="token punctuation">,</span> <span class="token comment">// if true, banner will not be wrapped in a comment</span>\n  entryOnly<span class="token operator">:</span> boolean<span class="token punctuation">,</span> <span class="token comment">// if true, the banner will only be added to the entry chunks</span>\n  test<span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> <span class="token punctuation">[</span>string<span class="token punctuation">,</span> RegExp<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Include all modules that pass test assertion.</span>\n  include<span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> <span class="token punctuation">[</span>string<span class="token punctuation">,</span> RegExp<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Include all modules matching any of these conditions.</span>\n  exclude<span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> <span class="token punctuation">[</span>string<span class="token punctuation">,</span> RegExp<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Exclude all modules matching any of these conditions.</span>\n<span class="token punctuation">}</span></code></pre> <h2 id="usage">Usage <a href="#usage" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <pre><code class="hljs language-javascript"><span class="token keyword">import</span> webpack <span class="token keyword">from</span> <span class="token string">\'webpack\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// string</span>\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  banner<span class="token operator">:</span> <span class="token string">\'hello world\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// function</span>\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">banner</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">yourVariable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">yourVariable: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>yourVariable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2 id="placeholders">Placeholders <a href="#placeholders" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Since webpack 2.5.0, placeholders are evaluated in the <code>banner</code> string:</p> <pre><code class="hljs language-javascript"><span class="token keyword">import</span> webpack <span class="token keyword">from</span> <span class="token string">\'webpack\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>BannerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  banner<span class="token operator">:</span> <span class="token string">\'fullhash:[fullhash], chunkhash:[chunkhash], name:[name], filebase:[filebase], query:[query], file:[file]\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> '}}]);