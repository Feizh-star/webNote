(self.webpackChunk=self.webpackChunk||[]).push([[5571],{5571:function(n){n.exports='<p>可以通过配置 <code>output</code> 选项，告知 webpack 如何向硬盘写入编译文件。注意，即使可以存在多个 <code>entry</code> 起点，但只能指定一个 <code>output</code> 配置。</p> <h2 id="usage">用法 <a href="#usage" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>在 webpack 配置中，<code>output</code> 属性的最低要求是，将它的值设置为一个对象，然后为将输出文件的文件名配置为一个 <a href="configuration/output/index.htm#outputfilename"/*tpa=https://webpack.docschina.org/configuration/output/#outputfilename*/><code>output.filename</code></a>：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">\'bundle.js\'/*tpa=https://webpack.docschina.org/bundle.js*/</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>此配置将一个单独的 <code>bundle.js</code> 文件输出到 <code>dist</code> 目录中。</p> <h2 id="multiple-entry-points">多个入口起点 <a href="#multiple-entry-points" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果配置中创建出多于一个 "chunk"（例如，使用多个入口起点或使用像 CommonsChunkPlugin 这样的插件），则应该使用 <a href="configuration/output.htm#output-filename"/*tpa=https://webpack.docschina.org/configuration/output#output-filename*/>占位符(substitutions)</a> 来确保每个文件具有唯一的名称。</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    app<span class="token operator">:</span> <span class="token string">\'src/app.js\'/*tpa=https://webpack.docschina.org/src/app.js*/</span><span class="token punctuation">,</span>\n    search<span class="token operator">:</span> <span class="token string">\'src/search.js\'/*tpa=https://webpack.docschina.org/src/search.js*/</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">\'[name].js\'/*tpa=https://webpack.docschina.org/[name].js*/</span><span class="token punctuation">,</span>\n    path<span class="token operator">:</span> __dirname <span class="token operator">+</span> <span class="token string">\'/dist\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 写入到硬盘：./dist/app.js, ./dist/search.js</span></code></pre> <h2 id="advanced">高级进阶 <a href="#advanced" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>以下是对资源使用 CDN 和 hash 的复杂示例：</p> <p><strong>config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">\'/home/proj/cdn/assets/[fullhash]\'</span><span class="token punctuation">,</span>\n    publicPath<span class="token operator">:</span> <span class="token string">\'https://cdn.example.com/assets/[fullhash]/\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>如果在编译时，不知道最终输出文件的 <code>publicPath</code> 是什么地址，则可以将其留空，并且在运行时通过入口起点文件中的 <code>__webpack_public_path__</code> 动态设置。</p> <pre><code class="hljs language-javascript">__webpack_public_path__ <span class="token operator">=</span> myRuntimePublicPath<span class="token punctuation">;</span>\n\n<span class="token comment">// 应用程序入口的其余部分</span></code></pre> '}}]);