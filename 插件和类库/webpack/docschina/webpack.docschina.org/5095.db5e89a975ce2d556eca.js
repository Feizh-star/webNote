(self.webpackChunk=self.webpackChunk||[]).push([[5095],{5095:function(e){e.exports='<p>这些选项可以配置是否 polyfill 或 mock 某些 <a href="https://nodejs.org/docs/latest/api/globals.html">Node.js 全局变量</a>。</p> <p>此功能由 webpack 内部的 <a href="../github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js"/*tpa=https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js*/><code>NodeStuffPlugin</code></a> 插件提供。</p> <blockquote class="warning"> <p>从 webpack 5 开始，你只能在 <code>node</code> 选项下配置 <code>global</code>、<code>__filename</code> 或 <code>__dirname</code>。如果需要在 webpack 5 下的 Node.js 中填充 <code>fs</code>，请查阅 <a href="configuration/resolve/index.htm#resolvefallback"/*tpa=https://webpack.docschina.org/configuration/resolve/#resolvefallback*/>resolve.fallback</a> 获取相关帮助。</p> </blockquote> <h2 id="node"><code>node</code> <a href="#node" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>boolean: false</code> <code>object</code></p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  node<span class="token operator">:</span> <span class="token punctuation">{</span>\n    global<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    __filename<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    __dirname<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>从 webpack 3.0.0 开始，<code>node</code> 选项可能被设置为 <code>false</code>，以完全关闭 <code>NodeStuffPlugin</code> 插件。</p> <h2 id="nodeglobal"><code>node.global</code> <a href="#nodeglobal" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>boolean</code></p> <blockquote class="tip"> <p>如果你正在使用一个需要全局变量的模块，请使用 <code>ProvidePlugin</code> 替代 <code>global</code>。</p> </blockquote> <p>关于此对象的准确行为，请查看<a href="https://nodejs.org/api/globals.html#globals_global">Node.js 文档</a>。</p> <p>选项：</p> <ul> <li><code>true</code>: 提供 polyfill.</li> <li><code>false</code>: 不提供任何 polyfill。代码可能会出现 <code>ReferenceError</code> 的崩溃。</li> </ul> <h2 id="node__filename"><code>node.__filename</code> <a href="#node__filename" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>boolean</code> <code>string: \'mock\' | \'eval-only\'</code></p> <p>选项：</p> <ul> <li><code>true</code>: <strong>输入</strong> 文件的文件名，是相对于 <a href="configuration/entry-context/index.htm#context"/*tpa=https://webpack.docschina.org/configuration/entry-context/#context*/><code>context</code> 选项</a>。</li> <li><code>false</code>: webpack 不会更改 <code>__filename</code> 的代码。在 Node.js 环境中运行时，<strong>输出</strong> 文件的文件名。</li> <li><code>\'mock\'</code>: value 填充为 <code>\'index.js\'/*tpa=https://webpack.docschina.org/index.js*/</code>.</li> </ul> <h2 id="node__dirname"><code>node.__dirname</code> <a href="#node__dirname" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>boolean</code> <code>string: \'mock\' | \'eval-only\'</code></p> <p>选项：</p> <ul> <li><code>true</code>: <strong>输入</strong> 文件的目录名，是相对于 <a href="configuration/entry-context/index.htm#context"/*tpa=https://webpack.docschina.org/configuration/entry-context/#context*/><code>context</code> 选项</a>。</li> <li><code>false</code>: webpack 不会更改 <code>__dirname</code> 的代码，这意味着你有常规 Node.js 中的 <code>__dirname</code> 的行为。在 Node.js 环境中运行时，<strong>输出</strong> 文件的目录名。</li> <li><code>\'mock\'</code>: value 填充为 <code>\'/\'</code>。</li> <li><code>\'eval-only\'</code></li> </ul> '}}]);