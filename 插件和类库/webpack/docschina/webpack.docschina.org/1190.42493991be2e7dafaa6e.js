(self.webpackChunk=self.webpackChunk||[]).push([[1190],{1190:function(n){n.exports='<p>这篇指南仅仅展示了影响用户使用的主要改变。更多细节查看 <a href="https://github.com/webpack/webpack/releases">更新日志(the changelog)</a>。</p> <h2 id="nodejs-v4">Node.js v4 <a href="#nodejs-v4" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>如果你正在使用 Node.js 的 V4 或 V4 以下版本，需要更新你的 Node.js 至 V6 或者更高版本</p> <p>更新 Node.js 版本的说明见 <a href="https://stackoverflow.com/questions/10075990/upgrading-node-js-to-latest-version">这里</a>。</p> <h2 id="cli">脚手架（CLI） <a href="#cli" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>脚手架 (CLI) 已经放至一个单独的 webpack-cli 中。在你使用 webpack 之前需要安装它，参见<a href="guides/getting-started/index.htm#basic-setup"/*tpa=https://webpack.docschina.org/guides/getting-started/#basic-setup*/>基础步骤</a>.</p> <p>安装指南见<a href="guides/installation.htm"/*tpa=https://webpack.docschina.org/guides/installation*/>这里</a>。</p> <h2 id="update-plugins">更新插件 <a href="#update-plugins" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>为了兼容 webpack4，许多第三方插件需要更新至最新版本。一些流行的插件链接见<a href="https://github.com/webpack-contrib/awesome-webpack#webpack-plugins">这里</a>。</p> <h2 id="mode">模式（mode） <a href="#mode" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>在你的配置中添加新的 <a href="configuration/mode/index.htm"/*tpa=https://webpack.docschina.org/configuration/mode/*/><code>模式 （mode）</code></a> 选项。设置它为 <code>\'production\'</code>, <code>\'development\'</code> or <code>\'无 (none)\'</code></p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mode: \'production\',\n</span></span>}</code></pre> <p>注：<code>\'development\'</code> 模式和 <code>\'production\'</code> 模式的用途不同。你可以使用 <a href="guides/production/index.htm#setup"/*tpa=https://webpack.docschina.org/guides/production/#setup*/>操作指南</a> 中的 <code>webpack-merge</code> 来优化配置。</p> <h2 id="deprecatedremoved-plugins">不推荐或被移除的插件 <a href="#deprecatedremoved-plugins" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>生产模式中已经默认集成了部分插件，这部分默认插件可以在配置中被移除：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span><span class="token prefix unchanged"> </span><span class="token line"> plugins: [\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    new NoEmitOnErrorsPlugin(),\n</span><span class="token prefix deleted">-</span><span class="token line">    new ModuleConcatenationPlugin(),\n</span><span class="token prefix deleted">-</span><span class="token line">    new DefinePlugin({ "process.env.NODE_ENV": JSON.stringify("production") })\n</span><span class="token prefix deleted">-</span><span class="token line">    new UglifyJsPlugin()\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ],\n</span></span>}</code></pre> <p>在开发模式中，这些插件已默认安装</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span><span class="token prefix unchanged"> </span><span class="token line"> plugins: [\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    new NamedModulesPlugin()\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ],\n</span></span>}</code></pre> <p>这些插件不推荐并且现在已经删除</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span><span class="token prefix unchanged"> </span><span class="token line"> plugins: [\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    new NoErrorsPlugin(),\n</span><span class="token prefix deleted">-</span><span class="token line">    new NewWatchingPlugin()\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ],\n</span></span>}</code></pre> <h2 id="commonschunkplugin">CommonsChunkPlugin <a href="#commonschunkplugin" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>CommonsChunkPlugin</code> 已被移除。可以使用 <a href="configuration/optimization/index.htm#optimizationsplitchunks"/*tpa=https://webpack.docschina.org/configuration/optimization/#optimizationsplitchunks*/><code>optimization.splitChunks</code></a> 来代替。</p> <p>查阅 <a href="configuration/optimization/index.htm#optimizationsplitchunks"/*tpa=https://webpack.docschina.org/configuration/optimization/#optimizationsplitchunks*/><code>optimization.splitChunks</code></a> 文档了解更多相关细节。其默认配置可能已经满足你的需求。</p> <p>注：当计算生成 HTML 时，你可以使用 <code>optimization.splitChunks.chunks: "all"</code>， 该优化配置在较多项目中被使用。</p> <h2 id="import-and-commonjs">import() 和 CommonJS <a href="#import-and-commonjs" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>在 webpack 4 中，当使用 <code>import()</code> 去加载非标准 ESM 时，其值已经被加载. 现在你需要通过 <code>default</code> 属性来得到 <code>module.exports</code> 中的取值。</p> <p><strong>non-esm.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">sayHello</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'hello world\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><strong>example.js</strong></p> <pre><code class="hljs language-javascript"><span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'non-esm.js\'/*tpa=https://webpack.docschina.org/non-esm.js*/</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">module</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    module<span class="token punctuation">.</span>default<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre> <h2 id="json-and-loaders">json 和 loaders <a href="#json-and-loaders" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>当使用自定义 loader 去转化 <code>.json</code> 文件时，你需要更改模块中的 <code>type</code>:</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span><span class="token prefix unchanged"> </span><span class="token line"> rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">   {\n</span><span class="token prefix unchanged"> </span><span class="token line">     test: /config\\.json$/,\n</span><span class="token prefix unchanged"> </span><span class="token line">     loader: \'special-loader\',\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">     type: \'javascript/auto\',\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">     options: {...}\n</span><span class="token prefix unchanged"> </span><span class="token line">   }\n</span><span class="token prefix unchanged"> </span><span class="token line"> ]\n</span></span>};</code></pre> <p>仍在使用的 <code>json-loader</code> 可从项目中移除。</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff">module.exports = {\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> // ...\n</span><span class="token prefix unchanged"> </span><span class="token line"> rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">   {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">     test: /\\.json$/,\n</span><span class="token prefix deleted">-</span><span class="token line">     loader: \'json-loader\'\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   }\n</span><span class="token prefix unchanged"> </span><span class="token line"> ]\n</span></span>};</code></pre> <h2 id="moduleloaders">module.loaders <a href="#moduleloaders" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>自 webpack 2 后 <code>module.loaders</code> 不推荐使用，目前其已被移除，并推荐使用 <a href="configuration/module/index.htm#rule"/*tpa=https://webpack.docschina.org/configuration/module/#rule*/><code>module.rules</code></a>。</p> '}}]);