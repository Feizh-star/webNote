(self.webpackChunk=self.webpackChunk||[]).push([[587],{587:function(n){n.exports='<p>想要消除 <code>webpack.config.js</code> 在 <a href="guides/development.htm"/*tpa=https://webpack.docschina.org/guides/development*/>开发环境</a> 和 <a href="guides/production.htm"/*tpa=https://webpack.docschina.org/guides/production*/>生产环境</a> 之间的差异，你可能需要环境变量(environment variable)。</p> <blockquote class="tip"> <p>webpack 环境变量，与操作系统中的 <code>bash</code> 和 <code>CMD.exe</code> 这些 shell <a href="https://en.wikipedia.org/wiki/Environment_variable">环境变量</a> 不同。</p> </blockquote> <p>webpack 命令行 <a href="api/cli/index.htm#environment-options"/*tpa=https://webpack.docschina.org/api/cli/#environment-options*/>环境配置</a> 的 <code>--env</code> 参数，可以允许你传入任意数量的环境变量。而在 <code>webpack.config.js</code> 中可以访问到这些环境变量。例如，<code>--env production</code> 或 <code>--env NODE_ENV=local</code>（<code>NODE_ENV</code> 通常约定用于定义环境类型，查看 <a href="https://dzone.com/articles/what-you-should-know-about-node-env">这里</a>）。</p> <pre><code class="hljs language-bash">npx webpack --env <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>local --env production --progress</code></pre> <blockquote class="tip"> <p>如果设置 <code>env</code> 变量，却没有赋值，<code>--env production</code> 默认表示将 <code>env.production</code> 设置为 <code>true</code>。还有许多其他可以使用的语法。更多详细信息，请查看 <a href="api/cli/index.htm#environment-options"/*tpa=https://webpack.docschina.org/api/cli/#environment-options*/>webpack CLI</a> 文档。</p> </blockquote> <p>对于我们的 webpack 配置，有一个必须要修改之处。通常，<code>module.exports</code> 指向配置对象。要使用 <code>env</code> 变量，你必须将 <code>module.exports</code> 转换成一个函数：</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">env</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// Use env.&#x3C;YOUR VARIABLE> here:</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'NODE_ENV: \'</span><span class="token punctuation">,</span> env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \'local\'</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Production: \'</span><span class="token punctuation">,</span> env<span class="token punctuation">.</span>production<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    entry<span class="token operator">:</span> <span class="token string">\'src/index.js\'/*tpa=https://webpack.docschina.org/src/index.js*/</span><span class="token punctuation">,</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'bundle.js\'/*tpa=https://webpack.docschina.org/bundle.js*/</span><span class="token punctuation">,</span>\n      path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'dist\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);