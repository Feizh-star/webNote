(self.webpackChunk=self.webpackChunk||[]).push([[9922],{9922:function(n){n.exports='<p>Instrument JS files with <a href="https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument">istanbul-lib-instrument</a> for subsequent code coverage reporting</p> <h2 id="install">Install <a href="#install" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <pre><code class="hljs language-bash"><span class="token function">npm</span> i -D istanbul-instrumenter-loader</code></pre> <h2 id="a-hrefhttpswebpackjsorgconceptsloadersusagea"><a href="https://webpack.js.org/concepts/loaders">Usage</a> <a href="#a-hrefhttpswebpackjsorgconceptsloadersusagea" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <h3 id="references"><code>References</code> <a href="#references" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <ul> <li><a href="https://github.com/webpack/karma-webpack">karma-webpack</a></li> <li><a href="https://github.com/mattlewis92/karma-coverage-istanbul-reporter">karma-coverage-istanbul-reporter</a></li> </ul> <h3 id="structure"><code>Structure</code> <a href="#structure" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code>├─ src\n│ |– components\n│ | |– bar\n│ | │ |─ index.js\n│ | |– foo/\n│     |– index.js\n|– test\n| |– src\n| | |– components\n| | | |– foo\n| | | | |– index.js\n</code></pre> <p>To create a code coverage report for all components (even for those for which you have no tests yet) you have to require all the 1) sources and 2) tests. Something like it\'s described in <a href="https://github.com/webpack/karma-webpack#alternative-usage">"alternative usage" of karma-webpack</a></p> <p><strong>test/index.js</strong></p> <pre><code class="hljs language-js"><span class="token comment">// requires all tests in `project/test/src/components/**/index.js`</span>\n<span class="token keyword">const</span> tests <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">\'./src/components/\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">index\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ntests<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>tests<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// requires all components in `project/src/components/**/index.js`</span>\n<span class="token keyword">const</span> components <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">\'../src/components/\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">index\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ncomponents<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <blockquote> <p>ℹ️ This file will be the only <code>entry</code> point for <code>karma</code></p> </blockquote> <p><strong>karma.conf.js</strong></p> <pre><code class="hljs language-js">config<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n  files<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'test/index.js\'/*tpa=https://webpack.docschina.org/test/index.js*/</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  preprocessors<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'test/index.js\'/*tpa=https://webpack.docschina.org/test/index.js*/</span><span class="token operator">:</span> <span class="token string">\'webpack\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  webpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n    module<span class="token operator">:</span> <span class="token punctuation">{</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// instrument only testing sources with Istanbul</span>\n        <span class="token punctuation">{</span>\n          test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n          use<span class="token operator">:</span> <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">\'istanbul-instrumenter-loader\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          include<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'src/components/\'</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n    <span class="token operator">...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  reporters<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">\'progress\'</span><span class="token punctuation">,</span> <span class="token string">\'coverage-istanbul\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  coverageIstanbulReporter<span class="token operator">:</span> <span class="token punctuation">{</span>\n    reports<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">\'text-summary\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    fixWebpackSourcePaths<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3 id="with-babel">with <code>Babel</code> <a href="#with-babel" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>You must run the instrumentation as a post step</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$|\\.jsx$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">\'istanbul-instrumenter-loader\'</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span> esModules<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  enforce<span class="token operator">:</span> <span class="token string">\'post\'</span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules|\\.spec\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre> <h2 id="a-hrefhttpsgithubcomistanbuljsistanbuljsblobmasterpackagesistanbul-lib-instrumentapimdinstrumenteroptionsa"><a href="https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter">Options</a> <a href="#a-hrefhttpsgithubcomistanbuljsistanbuljsblobmasterpackagesistanbul-lib-instrumentapimdinstrumenteroptionsa" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The loader supports all options supported by <code>istanbul-lib-instrument</code></p> <table> <thead> <tr> <th align="center">Name</th> <th align="center">Type</th> <th align="center">Default</th> <th align="left">Description</th> </tr> </thead> <tbody> <tr> <td align="center" data-th="Name"><span><strong><code>debug</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>false</code></span></td> <td align="left" data-th="Description"><span>Turn on debugging mode</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>compact</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>true</code></span></td> <td align="left" data-th="Description"><span>Generate compact code</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>autoWrap</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>false</code></span></td> <td align="left" data-th="Description"><span>Set to <code>true</code> to allow return statements outside of functions</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>esModules</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>false</code></span></td> <td align="left" data-th="Description"><span>Set to <code>true</code> to instrument ES2015 Modules</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>coverageVariable</code></strong></span></td> <td align="center" data-th="Type"><span><code>{String}</code></span></td> <td align="center" data-th="Default"><span><code>__coverage__</code></span></td> <td align="left" data-th="Description"><span>Name of global coverage variable</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>preserveComments</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>false</code></span></td> <td align="left" data-th="Description"><span>Preserve comments in <code>output</code></span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>produceSourceMap</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Boolean}</code></span></td> <td align="center" data-th="Default"><span><code>false</code></span></td> <td align="left" data-th="Description"><span>Set to <code>true</code> to produce a source map for the instrumented code</span></td> </tr> <tr> <td align="center" data-th="Name"><span><strong><code>sourceMapUrlCallback</code></strong></span></td> <td align="center" data-th="Type"><span><code>{Function}</code></span></td> <td align="center" data-th="Default"><span><code>null</code></span></td> <td align="left" data-th="Description"><span>A callback function that is called when a source map URL is found in the original code. This function is called with the source filename and the source map URL</span></td> </tr> </tbody> </table> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">\'istanbul-instrumenter-loader\'</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre> <h2 id="maintainers">Maintainers <a href="#maintainers" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <table> <tbody> <tr> <td align="center"> <img width="150" height="150" src="https://avatars.githubusercontent.com/u/266822?v=3&s=150"> <br> <a href="https://github.com/deepsweet">Kir Belevich</a> </td> <td align="center"> <a href="https://github.com/bebraw"> <img width="150" height="150" src="https://github.com/bebraw.png?v=3&s=150"> <br> Juho Vepsäläinen </a> </td> <td align="center"> <a href="https://github.com/d3viant0ne"> <img width="150" height="150" src="https://github.com/d3viant0ne.png?v=3&s=150"> <br> Joshua Wiens </a> </td> <td align="center"> <a href="https://github.com/michael-ciniawsky"> <img width="150" height="150" src="https://github.com/michael-ciniawsky.png?v=3&s=150"> <br> Michael Ciniawsky </a> </td> <td align="center"> <a href="https://github.com/mattlewis92"> <img width="150" height="150" src="https://github.com/mattlewis92.png?v=3&s=150"> <br> Matt Lewis </a> </td> </tr> <tbody> </tbody></tbody></table> '}}]);