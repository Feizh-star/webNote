<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>API 参考 | Vue Router</title>
    <meta name="generator" content="VuePress 1.5.3">
    <link rel="icon" href="/logo.png">
    <link rel="apple-touch-icon" href="/icons/apple-touch-icon-152x152.png">
    <link rel="mask-icon" href="/icons/safari-pinned-tab.svg" color="#3eaf7c">
    <meta name="description" content="Vue.js 官方的路由管理器。">
    <meta name="msapplication-TileImage" content="/icons/msapplication-icon-144x144.png">
    <link rel="preload" href="/assets/css/0.styles.ec947cda.css" as="style"><link rel="preload" href="/assets/js/app.6b1688c2.js" as="script"><link rel="preload" href="/assets/js/4.f5b4b047.js" as="script"><link rel="preload" href="/assets/js/3.0b307268.js" as="script"><link rel="preload" href="/assets/js/103.94c5782e.js" as="script"><link rel="preload" href="/assets/js/6.7271be6e.js" as="script"><link rel="prefetch" href="/assets/js/10.1790af99.js"><link rel="prefetch" href="/assets/js/100.37c40691.js"><link rel="prefetch" href="/assets/js/101.e261176d.js"><link rel="prefetch" href="/assets/js/102.838c629b.js"><link rel="prefetch" href="/assets/js/104.cc01e652.js"><link rel="prefetch" href="/assets/js/105.51383883.js"><link rel="prefetch" href="/assets/js/106.16ed94ca.js"><link rel="prefetch" href="/assets/js/107.63f79647.js"><link rel="prefetch" href="/assets/js/108.a167066b.js"><link rel="prefetch" href="/assets/js/109.c1858182.js"><link rel="prefetch" href="/assets/js/11.9bcaff1b.js"><link rel="prefetch" href="/assets/js/110.5d21366a.js"><link rel="prefetch" href="/assets/js/111.e8fb80b6.js"><link rel="prefetch" href="/assets/js/112.bac867cd.js"><link rel="prefetch" href="/assets/js/113.69eaec5c.js"><link rel="prefetch" href="/assets/js/114.4b22b659.js"><link rel="prefetch" href="/assets/js/115.aaa0b985.js"><link rel="prefetch" href="/assets/js/116.e9745ac7.js"><link rel="prefetch" href="/assets/js/117.2852971b.js"><link rel="prefetch" href="/assets/js/118.7e89356f.js"><link rel="prefetch" href="/assets/js/119.4c508f3b.js"><link rel="prefetch" href="/assets/js/12.49563e79.js"><link rel="prefetch" href="/assets/js/120.1321e0a3.js"><link rel="prefetch" href="/assets/js/121.1c6b3020.js"><link rel="prefetch" href="/assets/js/13.f3c6260e.js"><link rel="prefetch" href="/assets/js/14.367d7c12.js"><link rel="prefetch" href="/assets/js/15.5f4d7664.js"><link rel="prefetch" href="/assets/js/16.5f926581.js"><link rel="prefetch" href="/assets/js/17.05b6e7d6.js"><link rel="prefetch" href="/assets/js/18.3b02af5e.js"><link rel="prefetch" href="/assets/js/19.a43d1317.js"><link rel="prefetch" href="/assets/js/20.a2ca5cf4.js"><link rel="prefetch" href="/assets/js/21.6889091d.js"><link rel="prefetch" href="/assets/js/22.570036e2.js"><link rel="prefetch" href="/assets/js/23.f9c8a257.js"><link rel="prefetch" href="/assets/js/24.846c57c1.js"><link rel="prefetch" href="/assets/js/25.3ac58c47.js"><link rel="prefetch" href="/assets/js/26.0fb45f23.js"><link rel="prefetch" href="/assets/js/27.d1d553c3.js"><link rel="prefetch" href="/assets/js/28.7399f5e3.js"><link rel="prefetch" href="/assets/js/29.bb2ba810.js"><link rel="prefetch" href="/assets/js/30.6ee75df0.js"><link rel="prefetch" href="/assets/js/31.0e362047.js"><link rel="prefetch" href="/assets/js/32.3273e918.js"><link rel="prefetch" href="/assets/js/33.4e0c06d4.js"><link rel="prefetch" href="/assets/js/34.dbabcdb1.js"><link rel="prefetch" href="/assets/js/35.ebece908.js"><link rel="prefetch" href="/assets/js/36.be2f7223.js"><link rel="prefetch" href="/assets/js/37.a30e1018.js"><link rel="prefetch" href="/assets/js/38.6e324575.js"><link rel="prefetch" href="/assets/js/39.365cb9a2.js"><link rel="prefetch" href="/assets/js/40.59d39b6e.js"><link rel="prefetch" href="/assets/js/41.8c01fc8f.js"><link rel="prefetch" href="/assets/js/42.0dffb269.js"><link rel="prefetch" href="/assets/js/43.4f2cbb09.js"><link rel="prefetch" href="/assets/js/44.cea59c5b.js"><link rel="prefetch" href="/assets/js/45.3e73e269.js"><link rel="prefetch" href="/assets/js/46.94aa4a49.js"><link rel="prefetch" href="/assets/js/47.d21dd380.js"><link rel="prefetch" href="/assets/js/48.8b77422a.js"><link rel="prefetch" href="/assets/js/49.a5f9a020.js"><link rel="prefetch" href="/assets/js/5.81eb1dbf.js"><link rel="prefetch" href="/assets/js/50.f7792633.js"><link rel="prefetch" href="/assets/js/51.4da06d54.js"><link rel="prefetch" href="/assets/js/52.ce3fefff.js"><link rel="prefetch" href="/assets/js/53.b068a7f4.js"><link rel="prefetch" href="/assets/js/54.78236da5.js"><link rel="prefetch" href="/assets/js/55.28117390.js"><link rel="prefetch" href="/assets/js/56.5611264a.js"><link rel="prefetch" href="/assets/js/57.d5164305.js"><link rel="prefetch" href="/assets/js/58.3a97336d.js"><link rel="prefetch" href="/assets/js/59.9b01065d.js"><link rel="prefetch" href="/assets/js/60.c74efcd1.js"><link rel="prefetch" href="/assets/js/61.2d2f2899.js"><link rel="prefetch" href="/assets/js/62.35b871eb.js"><link rel="prefetch" href="/assets/js/63.de710260.js"><link rel="prefetch" href="/assets/js/64.569f9115.js"><link rel="prefetch" href="/assets/js/65.7b47fc38.js"><link rel="prefetch" href="/assets/js/66.2edadd5d.js"><link rel="prefetch" href="/assets/js/67.82d848bd.js"><link rel="prefetch" href="/assets/js/68.e2ab6fa8.js"><link rel="prefetch" href="/assets/js/69.dc9f6508.js"><link rel="prefetch" href="/assets/js/7.b31a44a3.js"><link rel="prefetch" href="/assets/js/70.c897fe95.js"><link rel="prefetch" href="/assets/js/71.5ea32fcf.js"><link rel="prefetch" href="/assets/js/72.81ed7874.js"><link rel="prefetch" href="/assets/js/73.ae0a4309.js"><link rel="prefetch" href="/assets/js/74.2b80c5fc.js"><link rel="prefetch" href="/assets/js/75.3adf4789.js"><link rel="prefetch" href="/assets/js/76.a48bd048.js"><link rel="prefetch" href="/assets/js/77.70aeb5fd.js"><link rel="prefetch" href="/assets/js/78.aba170a3.js"><link rel="prefetch" href="/assets/js/79.f5437a0d.js"><link rel="prefetch" href="/assets/js/8.3086f9c6.js"><link rel="prefetch" href="/assets/js/80.1bee32d8.js"><link rel="prefetch" href="/assets/js/81.110decc6.js"><link rel="prefetch" href="/assets/js/82.76e119a9.js"><link rel="prefetch" href="/assets/js/83.808ea2c5.js"><link rel="prefetch" href="/assets/js/84.ddb9d438.js"><link rel="prefetch" href="/assets/js/85.0cc04d98.js"><link rel="prefetch" href="/assets/js/86.f70e6721.js"><link rel="prefetch" href="/assets/js/87.2d020f22.js"><link rel="prefetch" href="/assets/js/88.b9394c3a.js"><link rel="prefetch" href="/assets/js/89.f71f338a.js"><link rel="prefetch" href="/assets/js/9.b5b3ec10.js"><link rel="prefetch" href="/assets/js/90.36dde418.js"><link rel="prefetch" href="/assets/js/91.8dd3787e.js"><link rel="prefetch" href="/assets/js/92.3c78d166.js"><link rel="prefetch" href="/assets/js/93.b04e6379.js"><link rel="prefetch" href="/assets/js/94.8a92633c.js"><link rel="prefetch" href="/assets/js/95.fb8ef71b.js"><link rel="prefetch" href="/assets/js/96.6853f73e.js"><link rel="prefetch" href="/assets/js/97.1a3b1b90.js"><link rel="prefetch" href="/assets/js/98.55a4dc56.js"><link rel="prefetch" href="/assets/js/99.278a998b.js"><link rel="prefetch" href="/assets/js/vendors~docsearch.d08572c3.js">
    <link rel="stylesheet" href="../../assets/css/0.styles.ec947cda.css" tppabs="https://router.vuejs.org/assets/css/0.styles.ec947cda.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="../index.htm" tppabs="https://router.vuejs.org/zh/" class="home-link router-link-active"><!----> <span class="site-name">Vue Router</span></a> <div class="links"><form id="search-form" role="search" class="algolia-search-wrapper search-box"><input id="algolia-search-input" class="search-query"></form> <nav class="nav-links can-hide"><div class="nav-item"><a href="../guide/index.htm" tppabs="https://router.vuejs.org/zh/guide/" class="nav-link">
  指南
</a></div><div class="nav-item"><a href="index.htm" tppabs="https://router.vuejs.org/zh/api/" aria-current="page" class="nav-link router-link-exact-active router-link-active">
  API 参考
</a></div><div class="nav-item"><a href="javascript:if(confirm('https://github.com/vuejs/vue-router/releases  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://github.com/vuejs/vue-router/releases'" tppabs="https://github.com/vuejs/vue-router/releases" target="_blank" rel="noopener noreferrer" class="nav-link external">
  更新记录
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Select language" class="dropdown-title"><span class="title">选择语言</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="../../api/index.htm" tppabs="https://router.vuejs.org/api/" class="nav-link">
  English
</a></li><li class="dropdown-item"><!----> <a href="index.htm" tppabs="https://router.vuejs.org/zh/api/" aria-current="page" class="nav-link router-link-exact-active router-link-active">
  简体中文
</a></li><li class="dropdown-item"><!----> <a href="../../ja/api/index.htm" tppabs="https://router.vuejs.org/ja/api/" class="nav-link">
  日本語
</a></li><li class="dropdown-item"><!----> <a href="../../ru/api/index.htm" tppabs="https://router.vuejs.org/ru/api/" class="nav-link">
  Русский
</a></li><li class="dropdown-item"><!----> <a href="../../kr/api/index.htm" tppabs="https://router.vuejs.org/kr/api/" class="nav-link">
  한국어
</a></li><li class="dropdown-item"><!----> <a href="../../fr/api/index.htm" tppabs="https://router.vuejs.org/fr/api/" class="nav-link">
  Français
</a></li></ul></div></div> <a href="javascript:if(confirm('https://github.com/vuejs/vue-router  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://github.com/vuejs/vue-router'" tppabs="https://github.com/vuejs/vue-router" target="_blank" rel="noopener noreferrer" class="repo-link">
    GitHub
    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="../guide/index.htm" tppabs="https://router.vuejs.org/zh/guide/" class="nav-link">
  指南
</a></div><div class="nav-item"><a href="index.htm" tppabs="https://router.vuejs.org/zh/api/" aria-current="page" class="nav-link router-link-exact-active router-link-active">
  API 参考
</a></div><div class="nav-item"><a href="javascript:if(confirm('https://github.com/vuejs/vue-router/releases  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://github.com/vuejs/vue-router/releases'" tppabs="https://github.com/vuejs/vue-router/releases" target="_blank" rel="noopener noreferrer" class="nav-link external">
  更新记录
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Select language" class="dropdown-title"><span class="title">选择语言</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="../../api/index.htm" tppabs="https://router.vuejs.org/api/" class="nav-link">
  English
</a></li><li class="dropdown-item"><!----> <a href="index.htm" tppabs="https://router.vuejs.org/zh/api/" aria-current="page" class="nav-link router-link-exact-active router-link-active">
  简体中文
</a></li><li class="dropdown-item"><!----> <a href="../../ja/api/index.htm" tppabs="https://router.vuejs.org/ja/api/" class="nav-link">
  日本語
</a></li><li class="dropdown-item"><!----> <a href="../../ru/api/index.htm" tppabs="https://router.vuejs.org/ru/api/" class="nav-link">
  Русский
</a></li><li class="dropdown-item"><!----> <a href="../../kr/api/index.htm" tppabs="https://router.vuejs.org/kr/api/" class="nav-link">
  한국어
</a></li><li class="dropdown-item"><!----> <a href="../../fr/api/index.htm" tppabs="https://router.vuejs.org/fr/api/" class="nav-link">
  Français
</a></li></ul></div></div> <a href="javascript:if(confirm('https://github.com/vuejs/vue-router  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://github.com/vuejs/vue-router'" tppabs="https://github.com/vuejs/vue-router" target="_blank" rel="noopener noreferrer" class="repo-link">
    GitHub
    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></nav>  <ul class="sidebar-links"><li><section class="sidebar-group depth-0"><p class="sidebar-heading open"><span>API 参考</span> <!----></p> <ul class="sidebar-links sidebar-group-items"><li><a href="index.htm#router-link" tppabs="https://router.vuejs.org/zh/api/#router-link" class="sidebar-link">&lt;router-link&gt;</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#v-slot-api-3-1-0-新增" tppabs="https://router.vuejs.org/zh/api/#v-slot-api-3-1-0-新增" class="sidebar-link">v-slot API (3.1.0 新增)</a></li><li class="sidebar-sub-header"><a href="index.htm#示例：将激活的-class-应用在外层元素" tppabs="https://router.vuejs.org/zh/api/#示例：将激活的-class-应用在外层元素" class="sidebar-link">示例：将激活的 class 应用在外层元素</a></li></ul></li><li><a href="index.htm#router-link-props" tppabs="https://router.vuejs.org/zh/api/#router-link-props" class="sidebar-link">&lt;router-link&gt; Props</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#to" tppabs="https://router.vuejs.org/zh/api/#to" class="sidebar-link">to</a></li><li class="sidebar-sub-header"><a href="index.htm#replace" tppabs="https://router.vuejs.org/zh/api/#replace" class="sidebar-link">replace</a></li><li class="sidebar-sub-header"><a href="index.htm#append" tppabs="https://router.vuejs.org/zh/api/#append" class="sidebar-link">append</a></li><li class="sidebar-sub-header"><a href="index.htm#tag" tppabs="https://router.vuejs.org/zh/api/#tag" class="sidebar-link">tag</a></li><li class="sidebar-sub-header"><a href="index.htm#active-class" tppabs="https://router.vuejs.org/zh/api/#active-class" class="sidebar-link">active-class</a></li><li class="sidebar-sub-header"><a href="index.htm#exact" tppabs="https://router.vuejs.org/zh/api/#exact" class="sidebar-link">exact</a></li><li class="sidebar-sub-header"><a href="index.htm#event" tppabs="https://router.vuejs.org/zh/api/#event" class="sidebar-link">event</a></li><li class="sidebar-sub-header"><a href="index.htm#exact-active-class" tppabs="https://router.vuejs.org/zh/api/#exact-active-class" class="sidebar-link">exact-active-class</a></li><li class="sidebar-sub-header"><a href="index.htm#aria-current-value" tppabs="https://router.vuejs.org/zh/api/#aria-current-value" class="sidebar-link">aria-current-value</a></li></ul></li><li><a href="index.htm#router-view" tppabs="https://router.vuejs.org/zh/api/#router-view" class="sidebar-link">&lt;router-view&gt;</a><ul class="sidebar-sub-headers"></ul></li><li><a href="index.htm#router-view-props" tppabs="https://router.vuejs.org/zh/api/#router-view-props" class="sidebar-link">&lt;router-view&gt; Props</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#name" tppabs="https://router.vuejs.org/zh/api/#name" class="sidebar-link">name</a></li></ul></li><li><a href="index.htm#router-构建选项" tppabs="https://router.vuejs.org/zh/api/#router-构建选项" class="sidebar-link">Router 构建选项</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#routes" tppabs="https://router.vuejs.org/zh/api/#routes" class="sidebar-link">routes</a></li><li class="sidebar-sub-header"><a href="index.htm#mode" tppabs="https://router.vuejs.org/zh/api/#mode" class="sidebar-link">mode</a></li><li class="sidebar-sub-header"><a href="index.htm#base" tppabs="https://router.vuejs.org/zh/api/#base" class="sidebar-link">base</a></li><li class="sidebar-sub-header"><a href="index.htm#linkactiveclass" tppabs="https://router.vuejs.org/zh/api/#linkactiveclass" class="sidebar-link">linkActiveClass</a></li><li class="sidebar-sub-header"><a href="index.htm#linkexactactiveclass" tppabs="https://router.vuejs.org/zh/api/#linkexactactiveclass" class="sidebar-link">linkExactActiveClass</a></li><li class="sidebar-sub-header"><a href="index.htm#scrollbehavior" tppabs="https://router.vuejs.org/zh/api/#scrollbehavior" class="sidebar-link">scrollBehavior</a></li><li class="sidebar-sub-header"><a href="index.htm#parsequery-stringifyquery" tppabs="https://router.vuejs.org/zh/api/#parsequery-stringifyquery" class="sidebar-link">parseQuery / stringifyQuery</a></li><li class="sidebar-sub-header"><a href="index.htm#fallback" tppabs="https://router.vuejs.org/zh/api/#fallback" class="sidebar-link">fallback</a></li></ul></li><li><a href="index.htm#router-实例属性" tppabs="https://router.vuejs.org/zh/api/#router-实例属性" class="sidebar-link">Router 实例属性</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#router-app" tppabs="https://router.vuejs.org/zh/api/#router-app" class="sidebar-link">router.app</a></li><li class="sidebar-sub-header"><a href="index.htm#router-mode" tppabs="https://router.vuejs.org/zh/api/#router-mode" class="sidebar-link">router.mode</a></li><li class="sidebar-sub-header"><a href="index.htm#router-currentroute" tppabs="https://router.vuejs.org/zh/api/#router-currentroute" class="sidebar-link">router.currentRoute</a></li></ul></li><li><a href="index.htm#router-实例方法" tppabs="https://router.vuejs.org/zh/api/#router-实例方法" class="sidebar-link">Router 实例方法</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#router-beforeeach" tppabs="https://router.vuejs.org/zh/api/#router-beforeeach" class="sidebar-link">router.beforeEach</a></li><li class="sidebar-sub-header"><a href="index.htm#router-beforeresolve" tppabs="https://router.vuejs.org/zh/api/#router-beforeresolve" class="sidebar-link">router.beforeResolve</a></li><li class="sidebar-sub-header"><a href="index.htm#router-aftereach" tppabs="https://router.vuejs.org/zh/api/#router-aftereach" class="sidebar-link">router.afterEach</a></li><li class="sidebar-sub-header"><a href="index.htm#router-push" tppabs="https://router.vuejs.org/zh/api/#router-push" class="sidebar-link">router.push</a></li><li class="sidebar-sub-header"><a href="index.htm#router-replace" tppabs="https://router.vuejs.org/zh/api/#router-replace" class="sidebar-link">router.replace</a></li><li class="sidebar-sub-header"><a href="index.htm#router-go" tppabs="https://router.vuejs.org/zh/api/#router-go" class="sidebar-link">router.go</a></li><li class="sidebar-sub-header"><a href="index.htm#router-back" tppabs="https://router.vuejs.org/zh/api/#router-back" class="sidebar-link">router.back</a></li><li class="sidebar-sub-header"><a href="index.htm#router-forward" tppabs="https://router.vuejs.org/zh/api/#router-forward" class="sidebar-link">router.forward</a></li><li class="sidebar-sub-header"><a href="index.htm#router-getmatchedcomponents" tppabs="https://router.vuejs.org/zh/api/#router-getmatchedcomponents" class="sidebar-link">router.getMatchedComponents</a></li><li class="sidebar-sub-header"><a href="index.htm#router-resolve" tppabs="https://router.vuejs.org/zh/api/#router-resolve" class="sidebar-link">router.resolve</a></li><li class="sidebar-sub-header"><a href="index.htm#router-addroutes" tppabs="https://router.vuejs.org/zh/api/#router-addroutes" class="sidebar-link">router.addRoutes</a></li><li class="sidebar-sub-header"><a href="index.htm#router-onready" tppabs="https://router.vuejs.org/zh/api/#router-onready" class="sidebar-link">router.onReady</a></li><li class="sidebar-sub-header"><a href="index.htm#router-onerror" tppabs="https://router.vuejs.org/zh/api/#router-onerror" class="sidebar-link">router.onError</a></li></ul></li><li><a href="index.htm#路由对象" tppabs="https://router.vuejs.org/zh/api/#路由对象" class="sidebar-link">路由对象</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#路由对象属性" tppabs="https://router.vuejs.org/zh/api/#路由对象属性" class="sidebar-link">路由对象属性</a></li></ul></li><li><a href="index.htm#组件注入" tppabs="https://router.vuejs.org/zh/api/#组件注入" class="sidebar-link">组件注入</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="index.htm#注入的属性" tppabs="https://router.vuejs.org/zh/api/#注入的属性" class="sidebar-link">注入的属性</a></li><li class="sidebar-sub-header"><a href="index.htm#增加的组件配置选项" tppabs="https://router.vuejs.org/zh/api/#增加的组件配置选项" class="sidebar-link">增加的组件配置选项</a></li></ul></li></ul></section></li></ul> </aside> <main class="page"><div class="carbon-ads"></div> <div class="theme-default-content content__default"><h1 id="api-参考"><a href="#api-参考" aria-hidden="true" class="header-anchor">#</a> API 参考</h1> <h2 id="router-link"><a href="#router-link" aria-hidden="true" class="header-anchor">#</a> <code>&lt;router-link&gt;</code></h2> <p><code>&lt;router-link&gt;</code> 组件支持用户在具有路由功能的应用中 (点击) 导航。
通过 <code>to</code> 属性指定目标地址，默认渲染成带有正确链接的 <code>&lt;a&gt;</code> 标签，可以通过配置 <code>tag</code> 属性生成别的标签.。另外，当目标路由成功激活时，链接元素自动设置一个表示激活的 CSS 类名。</p> <p><code>&lt;router-link&gt;</code> 比起写死的 <code>&lt;a href=&quot;...&quot;&gt;</code> 会好一些，理由如下：</p> <ul><li>无论是 HTML5 history 模式还是 hash 模式，它的表现行为一致，所以，当你要切换路由模式，或者在 IE9 降级使用 hash 模式，无须作任何变动。</li> <li>在 HTML5 history 模式下，<code>router-link</code> 会守卫点击事件，让浏览器不再重新加载页面。</li> <li>当你在 HTML5 history 模式下使用 <code>base</code> 选项之后，所有的 <code>to</code> 属性都不需要写 (基路径) 了。</li></ul> <h3 id="v-slot-api-3-1-0-新增"><a href="#v-slot-api-3-1-0-新增" aria-hidden="true" class="header-anchor">#</a> <code>v-slot</code> API (3.1.0 新增)</h3> <p><code>router-link</code> 通过一个<a href="javascript:if(confirm('https://cn.vuejs.org/v2/guide/components-slots.html  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD'" tppabs="https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">作用域插槽<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a>暴露底层的定制能力。这是一个更高阶的 API，主要面向库作者，但也可以为开发者提供便利，多数情况用在一个类似 <em>NavLink</em> 这样的组件里。</p> <p><strong>在使用 <code>v-slot</code> API 时，需要向 <code>router-link</code> 传入一个单独的子元素</strong>。否则 <code>router-link</code> 将会把子元素包裹在一个 <code>span</code> 元素内。</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span>
  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ href, route, navigate, isActive, isExactActive }<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavLink</span> <span class="token attr-name">:active</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isActive<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>href<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>{{ route.fullPath }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavLink</span>
  <span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ul><li><code>href</code>：解析后的 URL。将会作为一个 <code>a</code> 元素的 <code>href</code> attribute。</li> <li><code>route</code>：解析后的规范化的地址。</li> <li><code>navigate</code>：触发导航的函数。<strong>会在必要时自动阻止事件</strong>，和 <code>router-link</code> 同理。</li> <li><code>isActive</code>：如果需要应用<a href="#active-class">激活的 class</a> 则为 <code>true</code>。允许应用一个任意的 class。</li> <li><code>isExactActive</code>：如果需要应用<a href="#exact-active-class">精确激活的 class</a> 则为 <code>true</code>。允许应用一个任意的 class。</li></ul> <h3 id="示例：将激活的-class-应用在外层元素"><a href="#示例：将激活的-class-应用在外层元素" aria-hidden="true" class="header-anchor">#</a> 示例：将激活的 class 应用在外层元素</h3> <p>有的时候我们可能想把激活的 class 应用到一个外部元素而不是 <code>&lt;a&gt;</code> 标签本身，这时你可以在一个 <code>router-link</code> 中包裹该元素并使用 <code>v-slot</code> property 来创建链接：</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span>
  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/foo<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ href, route, navigate, isActive, isExactActive }<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>
    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[isActive &amp;&amp; <span class="token punctuation">'</span>router-link-active<span class="token punctuation">'</span>, isExactActive &amp;&amp; <span class="token punctuation">'</span>router-link-exact-active<span class="token punctuation">'</span>]<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>href<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navigate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ route.fullPath }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-block tip"><p class="custom-block-title">提示</p> <p>如果你在 <code>&lt;a&gt;</code> 元素上添加一个 <code>target=&quot;_blank&quot;</code>，则 <code>@click=&quot;navigate&quot;</code> 处理器会被忽略。</p></div> <h2 id="router-link-props"><a href="#router-link-props" aria-hidden="true" class="header-anchor">#</a> <code>&lt;router-link&gt;</code> Props</h2> <h3 id="to"><a href="#to" aria-hidden="true" class="header-anchor">#</a> to</h3> <ul><li><p>类型: <code>string | Location</code></p></li> <li><p>required</p> <p>表示目标路由的链接。当被点击后，内部会立刻把 <code>to</code> 的值传到 <code>router.push()</code>，所以这个值可以是一个字符串或者是描述目标位置的对象。</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token comment">&lt;!-- 字符串 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 渲染结果 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 使用 v-bind 的 JS 表达式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">'</span>home<span class="token punctuation">'</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 不写 v-bind 也可以，就像绑定别的属性一样 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">'</span>home<span class="token punctuation">'</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 同上 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ path: <span class="token punctuation">'</span>home<span class="token punctuation">'</span> }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 命名的路由 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name: <span class="token punctuation">'</span>user<span class="token punctuation">'</span>, params: { userId: 123 }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>User<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 带查询参数，下面的结果为 /register?plan=private --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ path: <span class="token punctuation">'</span>register<span class="token punctuation">'</span>, query: { plan: <span class="token punctuation">'</span>private<span class="token punctuation">'</span> }}<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>Register<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span>
<span class="token punctuation">&gt;</span></span>
</code></pre></div></li></ul> <h3 id="replace"><a href="#replace" aria-hidden="true" class="header-anchor">#</a> replace</h3> <ul><li><p>类型: <code>boolean</code></p></li> <li><p>默认值: <code>false</code></p> <p>设置 <code>replace</code> 属性的话，当点击时，会调用 <code>router.replace()</code> 而不是 <code>router.push()</code>，于是导航后不会留下 history 记录。</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ path: <span class="token punctuation">'</span>/abc<span class="token punctuation">'</span>}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">replace</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li></ul> <h3 id="append"><a href="#append" aria-hidden="true" class="header-anchor">#</a> append</h3> <ul><li><p>类型: <code>boolean</code></p></li> <li><p>默认值: <code>false</code></p> <p>设置 <code>append</code> 属性后，则在当前 (相对) 路径前添加基路径。例如，我们从 <code>/a</code> 导航到一个相对路径 <code>b</code>，如果没有配置 <code>append</code>，则路径为 <code>/b</code>，如果配了，则为 <code>/a/b</code></p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ path: <span class="token punctuation">'</span>relative/path<span class="token punctuation">'</span>}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">append</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li></ul> <h3 id="tag"><a href="#tag" aria-hidden="true" class="header-anchor">#</a> tag</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;a&quot;</code></p> <p>有时候想要 <code>&lt;router-link&gt;</code> 渲染成某种标签，例如 <code>&lt;li&gt;</code>。
于是我们使用 <code>tag</code> prop 类指定何种标签，同样它还是会监听点击，触发导航。</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/foo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>li<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 渲染结果 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li></ul> <h3 id="active-class"><a href="#active-class" aria-hidden="true" class="header-anchor">#</a> active-class</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;router-link-active&quot;</code></p> <p>设置链接激活时使用的 CSS 类名。默认值可以通过路由的构造选项 <code>linkActiveClass</code> 来全局配置。</p></li></ul> <h3 id="exact"><a href="#exact" aria-hidden="true" class="header-anchor">#</a> exact</h3> <ul><li><p>类型: <code>boolean</code></p></li> <li><p>默认值: <code>false</code></p> <p>“是否激活”默认类名的依据是<strong>包含匹配</strong>。
举个例子，如果当前的路径是 <code>/a</code> 开头的，那么 <code>&lt;router-link to=&quot;/a&quot;&gt;</code> 也会被设置 CSS 类名。</p> <p>按照这个规则，每个路由都会激活 <code>&lt;router-link to=&quot;/&quot;&gt;</code>！想要链接使用“精确匹配模式”，则使用 <code>exact</code> 属性：</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token comment">&lt;!-- 这个链接只会在地址为 / 的时候被激活 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">exact</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>查看更多关于激活链接类名的例子<a href="javascript:if(confirm('https://jsfiddle.net/8xrk1n9f/  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://jsfiddle.net/8xrk1n9f/'" tppabs="https://jsfiddle.net/8xrk1n9f/" target="_blank" rel="noopener noreferrer">可运行<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></li></ul> <h3 id="event"><a href="#event" aria-hidden="true" class="header-anchor">#</a> event</h3> <ul><li><p>类型: <code>string | Array&lt;string&gt;</code></p></li> <li><p>默认值: <code>'click'</code></p> <p>声明可以用来触发导航的事件。可以是一个字符串或是一个包含字符串的数组。</p></li></ul> <h3 id="exact-active-class"><a href="#exact-active-class" aria-hidden="true" class="header-anchor">#</a> exact-active-class</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;router-link-exact-active&quot;</code></p> <p>配置当链接被精确匹配的时候应该激活的 class。注意默认值也是可以通过路由构造函数选项 <code>linkExactActiveClass</code> 进行全局配置的。</p></li></ul> <h3 id="aria-current-value"><a href="#aria-current-value" aria-hidden="true" class="header-anchor">#</a> aria-current-value</h3> <ul><li><p>类型: <code>'page' | 'step' | 'location' | 'date' | 'time'</code></p></li> <li><p>默认值: <code>&quot;page&quot;</code></p> <p>当链接根据精确匹配规则激活时配置的 <code>aria-current</code> 的值。这个值应该是 ARIA 规范中<a href="javascript:if(confirm('https://www.w3.org/TR/wai-aria-1.2/  \n\n���ļ��޷��� Teleport Ultra ����, ��Ϊ ����һ�����·���ⲿ������Ϊ������ʼ��ַ�ĵ�ַ��  \n\n�����ڷ������ϴ���?'))window.location='https://www.w3.org/TR/wai-aria-1.2/#aria-current'" tppabs="https://www.w3.org/TR/wai-aria-1.2/#aria-current" target="_blank" rel="noopener noreferrer">允许的 aria-current 的值<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a>。在绝大多数场景下，默认值 <code>page</code> 应该是最合适的。</p></li></ul> <h2 id="router-view"><a href="#router-view" aria-hidden="true" class="header-anchor">#</a> <code>&lt;router-view&gt;</code></h2> <p><code>&lt;router-view&gt;</code> 组件是一个 functional 组件，渲染路径匹配到的视图组件。<code>&lt;router-view&gt;</code> 渲染的组件还可以内嵌自己的 <code>&lt;router-view&gt;</code>，根据嵌套路径，渲染嵌套组件。</p> <p>其他属性 (非 router-view 使用的属性) 都直接传给渲染的组件，
很多时候，每个路由的数据都是包含在路由参数中。</p> <p>因为它也是个组件，所以可以配合 <code>&lt;transition&gt;</code> 和 <code>&lt;keep-alive&gt;</code> 使用。如果两个结合一起用，要确保在内层使用 <code>&lt;keep-alive&gt;</code>：</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="router-view-props"><a href="#router-view-props" aria-hidden="true" class="header-anchor">#</a> <code>&lt;router-view&gt;</code> Props</h2> <h3 id="name"><a href="#name" aria-hidden="true" class="header-anchor">#</a> name</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;default&quot;</code></p> <p>如果 <code>&lt;router-view&gt;</code>设置了名称，则会渲染对应的路由配置中 <code>components</code> 下的相应组件。查看 <a href="../guide/essentials/named-views.html" tppabs="https://router.vuejs.org/zh/guide/essentials/named-views.html">命名视图</a> 中的例子。</p></li></ul> <h2 id="router-构建选项"><a href="#router-构建选项" aria-hidden="true" class="header-anchor">#</a> Router 构建选项</h2> <h3 id="routes"><a href="#routes" aria-hidden="true" class="header-anchor">#</a> routes</h3> <ul><li><p>类型: <code>Array&lt;RouteConfig&gt;</code></p> <p><code>RouteConfig</code> 的类型定义：</p> <div class="language-ts extra-class"><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">RouteConfig</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  component<span class="token operator">?</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token comment">// 命名路由</span>
  components<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Component <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 命名视图组件</span>
  redirect<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> Location <span class="token operator">|</span> <span class="token builtin">Function</span><span class="token punctuation">,</span>
  props<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> Object <span class="token operator">|</span> <span class="token builtin">Function</span><span class="token punctuation">,</span>
  alias<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  children<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>RouteConfig<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token comment">// 嵌套路由</span>
  beforeEnter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>to<span class="token operator">:</span> Route<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token operator">:</span> Route<span class="token punctuation">,</span> next<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  meta<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>

  <span class="token comment">// 2.6.0+</span>
  caseSensitive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token comment">// 匹配规则是否大小写敏感？(默认值：false)</span>
  pathToRegexpOptions<span class="token operator">?</span><span class="token operator">:</span> Object <span class="token comment">// 编译正则的选项</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul> <h3 id="mode"><a href="#mode" aria-hidden="true" class="header-anchor">#</a> mode</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;hash&quot; (浏览器环境) | &quot;abstract&quot; (Node.js 环境)</code></p></li> <li><p>可选值: <code>&quot;hash&quot; | &quot;history&quot; | &quot;abstract&quot;</code></p> <p>配置路由模式:</p> <ul><li><p><code>hash</code>: 使用 URL hash 值来作路由。支持所有浏览器，包括不支持 HTML5 History Api 的浏览器。</p></li> <li><p><code>history</code>: 依赖 HTML5 History API 和服务器配置。查看 <a href="../guide/essentials/history-mode.html" tppabs="https://router.vuejs.org/zh/guide/essentials/history-mode.html">HTML5 History 模式</a>。</p></li> <li><p><code>abstract</code>: 支持所有 JavaScript 运行环境，如 Node.js 服务器端。<strong>如果发现没有浏览器的 API，路由会自动强制进入这个模式。</strong></p></li></ul></li></ul> <h3 id="base"><a href="#base" aria-hidden="true" class="header-anchor">#</a> base</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;/&quot;</code></p> <p>应用的基路径。例如，如果整个单页应用服务在 <code>/app/</code> 下，然后 <code>base</code> 就应该设为 <code>&quot;/app/&quot;</code>。</p></li></ul> <h3 id="linkactiveclass"><a href="#linkactiveclass" aria-hidden="true" class="header-anchor">#</a> linkActiveClass</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;router-link-active&quot;</code></p> <p>全局配置 <code>&lt;router-link&gt;</code> 默认的激活的 class。参考 <a href="#router-link">router-link</a>。</p></li></ul> <h3 id="linkexactactiveclass"><a href="#linkexactactiveclass" aria-hidden="true" class="header-anchor">#</a> linkExactActiveClass</h3> <ul><li><p>类型: <code>string</code></p></li> <li><p>默认值: <code>&quot;router-link-exact-active&quot;</code></p> <p>全局配置 <code>&lt;router-link&gt;</code> 默认的精确激活的 class。可同时翻阅 <a href="#router-link">router-link</a>。</p></li></ul> <h3 id="scrollbehavior"><a href="#scrollbehavior" aria-hidden="true" class="header-anchor">#</a> scrollBehavior</h3> <ul><li><p>类型: <code>Function</code></p> <p>签名:</p> <div class="language- extra-class"><pre class="language-text"><code>type PositionDescriptor =
  { x: number, y: number } |
  { selector: string } |
  ?{}

type scrollBehaviorHandler = (
  to: Route,
  from: Route,
  savedPosition?: { x: number, y: number }
) =&gt; PositionDescriptor | Promise&lt;PositionDescriptor&gt;
</code></pre></div><p>更多详情参考<a href="../guide/advanced/scroll-behavior.html" tppabs="https://router.vuejs.org/zh/guide/advanced/scroll-behavior.html">滚动行为</a>。</p></li></ul> <h3 id="parsequery-stringifyquery"><a href="#parsequery-stringifyquery" aria-hidden="true" class="header-anchor">#</a> parseQuery / stringifyQuery</h3> <ul><li><p>类型: <code>Function</code></p> <p>提供自定义查询字符串的解析/反解析函数。覆盖默认行为。</p></li></ul> <h3 id="fallback"><a href="#fallback" aria-hidden="true" class="header-anchor">#</a> fallback</h3> <ul><li><p>类型: <code>boolean</code></p></li> <li><p>默认值: <code>true</code></p> <p>当浏览器不支持 <code>history.pushState</code> 控制路由是否应该回退到 <code>hash</code> 模式。默认值为 <code>true</code>。</p> <p>在 IE9 中，设置为 <code>false</code> 会使得每个 <code>router-link</code> 导航都触发整页刷新。它可用于工作在 IE9 下的服务端渲染应用，因为一个 hash 模式的 URL 并不支持服务端渲染。</p></li></ul> <h2 id="router-实例属性"><a href="#router-实例属性" aria-hidden="true" class="header-anchor">#</a> Router 实例属性</h2> <h3 id="router-app"><a href="#router-app" aria-hidden="true" class="header-anchor">#</a> router.app</h3> <ul><li><p>类型: <code>Vue instance</code></p> <p>配置了 <code>router</code> 的 Vue 根实例。</p></li></ul> <h3 id="router-mode"><a href="#router-mode" aria-hidden="true" class="header-anchor">#</a> router.mode</h3> <ul><li><p>类型: <code>string</code></p> <p>路由使用的<a href="#mode">模式</a>。</p></li></ul> <h3 id="router-currentroute"><a href="#router-currentroute" aria-hidden="true" class="header-anchor">#</a> router.currentRoute</h3> <ul><li><p>类型: <code>Route</code></p> <p>当前路由对应的<a href="#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1">路由信息对象</a>。</p></li></ul> <h2 id="router-实例方法"><a href="#router-实例方法" aria-hidden="true" class="header-anchor">#</a> Router 实例方法</h2> <h3 id="router-beforeeach"><a href="#router-beforeeach" aria-hidden="true" class="header-anchor">#</a> router.beforeEach</h3> <h3 id="router-beforeresolve"><a href="#router-beforeresolve" aria-hidden="true" class="header-anchor">#</a> router.beforeResolve</h3> <h3 id="router-aftereach"><a href="#router-aftereach" aria-hidden="true" class="header-anchor">#</a> router.afterEach</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 必须调用 `next` */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">beforeResolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 必须调用 `next` */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>增加全局的导航守卫。参考<a href="../guide/advanced/navigation-guards.html" tppabs="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html">导航守卫</a>。</p> <p>在 2.5.0+ 这三个方法都返回一个移除已注册的守卫/钩子的函数。</p> <h3 id="router-push"><a href="#router-push" aria-hidden="true" class="header-anchor">#</a> router.push</h3> <h3 id="router-replace"><a href="#router-replace" aria-hidden="true" class="header-anchor">#</a> router.replace</h3> <h3 id="router-go"><a href="#router-go" aria-hidden="true" class="header-anchor">#</a> router.go</h3> <h3 id="router-back"><a href="#router-back" aria-hidden="true" class="header-anchor">#</a> router.back</h3> <h3 id="router-forward"><a href="#router-forward" aria-hidden="true" class="header-anchor">#</a> router.forward</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> onComplete<span class="token operator">?</span><span class="token punctuation">,</span> onAbort<span class="token operator">?</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onComplete<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onAbort<span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> onComplete<span class="token operator">?</span><span class="token punctuation">,</span> onAbort<span class="token operator">?</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onComplete<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onAbort<span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>动态的导航到一个新 URL。参考<a href="../guide/essentials/navigation.html" tppabs="https://router.vuejs.org/zh/guide/essentials/navigation.html">编程式导航</a>。</p> <h3 id="router-getmatchedcomponents"><a href="#router-getmatchedcomponents" aria-hidden="true" class="header-anchor">#</a> router.getMatchedComponents</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">const</span> matchedComponents<span class="token operator">:</span> Array<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">getMatchedComponents</span><span class="token punctuation">(</span>location<span class="token operator">?</span><span class="token punctuation">)</span>
</code></pre></div><p>返回目标位置或是当前路由匹配的组件数组 (是数组的定义/构造类，不是实例)。通常在服务端渲染的数据预加载时使用。</p> <h3 id="router-resolve"><a href="#router-resolve" aria-hidden="true" class="header-anchor">#</a> router.resolve</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">const</span> resolved<span class="token operator">:</span> <span class="token punctuation">{</span>
  location<span class="token operator">:</span> Location<span class="token punctuation">;</span>
  route<span class="token operator">:</span> Route<span class="token punctuation">;</span>
  href<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> current<span class="token operator">?</span><span class="token punctuation">,</span> append<span class="token operator">?</span><span class="token punctuation">)</span>
</code></pre></div><p>解析目标位置 (格式和 <code>&lt;router-link&gt;</code> 的 <code>to</code> prop 一样)。</p> <ul><li><code>current</code> 是当前默认的路由 (通常你不需要改变它)</li> <li><code>append</code> 允许你在 <code>current</code> 路由上附加路径 (如同 <a href="#router-link.md-props"><code>router-link</code></a>)</li></ul> <h3 id="router-addroutes"><a href="#router-addroutes" aria-hidden="true" class="header-anchor">#</a> router.addRoutes</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span>routes<span class="token operator">:</span> Array<span class="token operator">&lt;</span>RouteConfig<span class="token operator">&gt;</span><span class="token punctuation">)</span>
</code></pre></div><p>动态添加更多的路由规则。参数必须是一个符合 <code>routes</code> 选项要求的数组。</p> <h3 id="router-onready"><a href="#router-onready" aria-hidden="true" class="header-anchor">#</a> router.onReady</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">onReady</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token punctuation">[</span>errorCallback<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>该方法把一个回调排队，在路由完成初始导航时调用，这意味着它可以解析所有的异步进入钩子和路由初始化相关联的异步组件。</p> <p>这可以有效确保服务端渲染时服务端和客户端输出的一致。</p> <p>第二个参数 <code>errorCallback</code> 只在 2.4+ 支持。它会在初始化路由解析运行出错 (比如解析一个异步组件失败) 时被调用。</p> <h3 id="router-onerror"><a href="#router-onerror" aria-hidden="true" class="header-anchor">#</a> router.onError</h3> <p>函数签名：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
</code></pre></div><p>注册一个回调，该回调会在路由导航过程中出错时被调用。注意被调用的错误必须是下列情形中的一种：</p> <ul><li><p>错误在一个路由守卫函数中被同步抛出；</p></li> <li><p>错误在一个路由守卫函数中通过调用 <code>next(err)</code> 的方式异步捕获并处理；</p></li> <li><p>渲染一个路由的过程中，需要尝试解析一个异步组件时发生错误。</p></li></ul> <h2 id="路由对象"><a href="#路由对象" aria-hidden="true" class="header-anchor">#</a> 路由对象</h2> <p>一个<strong>路由对象 (route object)</strong> 表示当前激活的路由的状态信息，包含了当前 URL 解析得到的信息，还有 URL 匹配到的<strong>路由记录 (route records)</strong>。</p> <p>路由对象是不可变 (immutable) 的，每次成功的导航后都会产生一个新的对象。</p> <p>路由对象出现在多个地方:</p> <ul><li><p>在组件内，即 <code>this.$route</code></p></li> <li><p>在 <code>$route</code> 观察者回调内</p></li> <li><p><code>router.match(location)</code> 的返回值</p></li> <li><p>导航守卫的参数：</p> <div class="language-js extra-class"><pre class="language-js"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// `to` 和 `from` 都是路由对象</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li> <li><p><code>scrollBehavior</code> 方法的参数:</p> <div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">scrollBehavior</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> savedPosition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// `to` 和 `from` 都是路由对象</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li></ul> <h3 id="路由对象属性"><a href="#路由对象属性" aria-hidden="true" class="header-anchor">#</a> 路由对象属性</h3> <ul><li><p><strong>$route.path</strong></p> <ul><li><p>类型: <code>string</code></p> <p>字符串，对应当前路由的路径，总是解析为绝对路径，如 <code>&quot;/foo/bar&quot;</code>。</p></li></ul></li> <li><p><strong>$route.params</strong></p> <ul><li><p>类型: <code>Object</code></p> <p>一个 key/value 对象，包含了动态片段和全匹配片段，如果没有路由参数，就是一个空对象。</p></li></ul></li> <li><p><strong>$route.query</strong></p> <ul><li><p>类型: <code>Object</code></p> <p>一个 key/value 对象，表示 URL 查询参数。例如，对于路径 <code>/foo?user=1</code>，则有 <code>$route.query.user == 1</code>，如果没有查询参数，则是个空对象。</p></li></ul></li> <li><p><strong>$route.hash</strong></p> <ul><li><p>类型: <code>string</code></p> <p>当前路由的 hash 值 (带 <code>#</code>) ，如果没有 hash 值，则为空字符串。</p></li></ul></li> <li><p><strong>$route.fullPath</strong></p> <ul><li><p>类型: <code>string</code></p> <p>完成解析后的 URL，包含查询参数和 hash 的完整路径。</p></li></ul></li> <li><p><strong>$route.matched</strong></p> <ul><li>类型: <code>Array&lt;RouteRecord&gt;</code></li></ul> <p>一个数组，包含当前路由的所有嵌套路径片段的<strong>路由记录</strong> 。路由记录就是 <code>routes</code> 配置数组中的对象副本 (还有在 <code>children</code> 数组)。</p> <div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  routes<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 下面的对象就是路由记录</span>
    <span class="token punctuation">{</span>
      path<span class="token operator">:</span> <span class="token string">'/foo'</span><span class="token punctuation">,</span>
      component<span class="token operator">:</span> Foo<span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// 这也是个路由记录</span>
        <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Bar <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>当 URL 为 <code>/foo/bar</code>，<code>$route.matched</code> 将会是一个包含从上到下的所有对象 (副本)。</p></li> <li><p><strong>$route.name</strong></p> <p>当前路由的名称，如果有的话。(查看<a href="../guide/essentials/named-routes.html" tppabs="https://router.vuejs.org/zh/guide/essentials/named-routes.html">命名路由</a>)</p></li> <li><p><strong>$route.redirectedFrom</strong></p> <p>如果存在重定向，即为重定向来源的路由的名字。(参阅<a href="../guide/essentials/redirect-and-alias.html" tppabs="https://router.vuejs.org/zh/guide/essentials/redirect-and-alias.html">重定向和别名</a>)</p></li></ul> <h2 id="组件注入"><a href="#组件注入" aria-hidden="true" class="header-anchor">#</a> 组件注入</h2> <h3 id="注入的属性"><a href="#注入的属性" aria-hidden="true" class="header-anchor">#</a> 注入的属性</h3> <p>通过在 Vue 根实例的 <code>router</code> 配置传入 router 实例，下面这些属性成员会被注入到每个子组件。</p> <ul><li><p><strong>this.$router</strong></p> <p>router 实例。</p></li> <li><p><strong>this.$route</strong></p> <p>当前激活的<a href="#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1">路由信息对象</a>。这个属性是只读的，里面的属性是 immutable (不可变) 的，不过你可以 watch (监测变化) 它。</p></li></ul> <h3 id="增加的组件配置选项"><a href="#增加的组件配置选项" aria-hidden="true" class="header-anchor">#</a> 增加的组件配置选项</h3> <ul><li><p><strong>beforeRouteEnter</strong></p></li> <li><p><strong>beforeRouteUpdate</strong></p></li> <li><p><strong>beforeRouteLeave</strong></p> <p>查看<a href="../guide/advanced/navigation-guards.html#组件内的守卫" tppabs="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#组件内的守卫">组件内的守卫</a>。</p></li></ul></div> <footer class="page-edit"><!----> <!----></footer> <!----> <div class="bsa-cpc-wrapper"><div class="bsa-cpc"></div></div></main></div><div class="global-ui"><!----></div></div>
    <script src="../../assets/js/app.6b1688c2.js" tppabs="https://router.vuejs.org/assets/js/app.6b1688c2.js" defer></script><script src="../../assets/js/4.f5b4b047.js" tppabs="https://router.vuejs.org/assets/js/4.f5b4b047.js" defer></script><script src="../../assets/js/3.0b307268.js" tppabs="https://router.vuejs.org/assets/js/3.0b307268.js" defer></script><script src="../../assets/js/103.94c5782e.js" tppabs="https://router.vuejs.org/assets/js/103.94c5782e.js" defer></script><script src="../../assets/js/6.7271be6e.js" tppabs="https://router.vuejs.org/assets/js/6.7271be6e.js" defer></script>
  </body>
</html>
